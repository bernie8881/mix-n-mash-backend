{"version":3,"sources":["images/headphones w rainbow w text.svg","services/authService.js","utils/use-auth.js","images/navbar-logo.svg","data/NavbarLinks.js","components/Navbar/Navbar.js","components/Dropdown/Dropdown.js","components/IconButton/IconButton.js","components/MixtapeResultCard/MixtapeResultCard.js","services/mixtapesService.js","pages/HottestMixtapes/HottestMixtapes.js","components/MixtapeCard/MixtapeCard.js","utils/use-toast.js","pages/MyMixtapes/MyMixtapes.js","components/MashmateCard/MashmateCard.js","utils/DateUtils.js","components/MashmateRequestCard/MashmateRequestCard.js","pages/Account/Components/ChangePassword.js","services/userService.js","components/Modals/DeactivateAccountModal.js","pages/Account/Account.js","components/SongCard/SongCard.js","components/AddSongCard/AddSongCard.js","services/youtubeService.js","components/Modals/AddSongModal.js","components/Modals/Components/EditPermissionsCard.js","components/Modals/Components/AddCollaboratorCard.js","components/Modals/AddCollaboratorModal.js","components/Modals/Components/MashMixtapeCard.js","components/Modals/MashMixtapeModal.js","components/Comments/Comment.js","utils/use-polling.js","pages/MixtapePage/MixtapePage.js","components/UserResultCard/UserResultCard.js","pages/SearchResults/SearchResults.js","pages/UserPage/UserPage.js","components/PrivateRoute/PrivateRoute.js","pages/SignIn/Splash.js","pages/SignIn/Components/LoginForm.js","pages/SignIn/Components/SignUpForm.js","pages/SignIn/Components/ForgotPasswordForm.js","pages/SignIn/Components/ReactivateAccountForm.js","pages/SignIn/SignIn.js","App.js","index.js"],"names":["module","exports","usernameOrEmail","password","a","rawResponse","fetch","method","credentials","headers","Accept","body","JSON","stringify","username","response","ok","json","status","text","error","message","email","newPassword","tempCode","authContext","React","createContext","ProvideAuth","children","auth","useState","user","setUser","loading","setLoading","initialized","setInitialized","getUser","userFields","undefined","key","doOptimisticUpdate","getUserPassport","then","userOrError","login","loginPassport","logout","logoutPassport","success","signup","signupPassport","changePassword","oldPassword","changePasswordPassport","messageOrError","forgotPassword","forgotPasswordPassport","resetPassword","resetPasswordPassport","useProvideAuth","Provider","value","useAuth","useContext","NavbarLinks","Navbar","props","history","useHistory","searchTerm","setSearchTerm","scrollPastZero","setScrollPastZero","checkScroll","window","pageYOffset","useEffect","addEventListener","passive","removeEventListener","id","className","Form","inline","onSubmit","event","preventDefault","push","Control","type","placeholder","onChange","target","currentPage","onClick","src","require","alt","CustomDropdown","defaultIndex","items","selected","setSelected","DropdownButton","as","ButtonGroup","title","stopPropagation","map","item","Dropdown","Item","selectionCallback","eventKey","IconButton","Button","variant","callback","onMouseDown","onMouseUp","disabled","component","MixtapeResultCard","mixtape","index","to","_id","likes","listens","genres","join","songs","length","youtubeId","ownerId","ownerName","mixtapesClient","ApolloClient","uri","cache","InMemoryCache","getMixtape","gql","getHottestMixtapes","getUserMixtapes","getAllUserMixtapes","getUserPageMixtapes","queryMixtapes","createMixtape","addSongs","editSongs","addComment","addReply","createMixtapeFromBase","mashMixtape","removeMixtape","updateLikes","updateDislikes","addListen","updateMixtapeTitle","updateMixtapeDescription","updateMixtapeGenres","updateMixtapePrivate","updateOwnerActive","updateCollaborators","sortCriteria","HottestMixtapes","useParams","criteria","skip","useQuery","client","variables","userId","parseInt","limit","following","genrePreferences","x","genre","val","pollInterval","data","refetch","navigatePage","increment","newCriteria","newSkip","selection","Spinner","animation","role","hottestMixtapes","MixtapeCard","useMutation","removeMixtapeMut","private","collaborators","refetchMyMixtapes","toastContext","ProvideToast","toaster","toastList","setToastList","showToastList","setShowToastList","currentAlert","setAlert","showAlert","setShowAlert","notify","header","newToastList","ToastData","newShowToastList","hide","toast","indexOf","alert","AlertData","hideAlert","useProvideToast","closeToast","parentElement","classList","add","setTimeout","Alert","show","onClose","dismissible","Heading","Toast","delay","getRemainingTime","autohide","Header","Body","useToast","lifetime","Date","now","initTime","isAlive","this","Test","filterKey","setFilterKey","filterFunctions","reduce","acc","privilegeLevel","createMixtapeMut","onCompleted","createNewMixtape","createMixtapeMutation","style","marginRight","filter","MashmateCard","Card","mashmate","remove","fmt","Intl","DateTimeFormat","dateStyle","timeStyle","formatDate","dateString","format","MashmateRequestCard","mashmateRequest","senderId","timeSent","resolve","ChangePassword","setPassword","setNewPassword","passwordVisible","setPasswordVisible","newPasswordVisible","setNewPasswordVisible","validated","setValidated","isInvalid","setIsInvalid","width","res","Group","Label","Row","Col","Feedback","md","userClient","queryUsers","updateUserLikes","updateUserDislikes","updateBio","deactivateAccount","reactivateAccount","sendMMRequest","resolveMashmateRequest","follow","incFollowersCount","unfollow","decFollowersCount","removeMashmate","DeactivateAccountModal","setShow","handleClose","Modal","onHide","closeButton","Title","Footer","deactivateCallback","Account","updateOwnerActiveMut","updateOwnerActiveMutation","editingBio","setEditingBio","bio","tempBio","setTempBio","updateBioMut","updateBioMutation","deactivateAccountMut","deactivateAccountMutation","resolveMMRequest","resolveMMRequestMut","removeMMMut","removeMMMutation","refreshUser","resolveMMR","accepted","senderUsername","removeMM","mashmateId","mashmateUsername","location","reload","numFollowers","paddingLeft","paddingTop","FormControl","maxLength","maxHeight","mashmates","receivedMashmateRequests","paddingBottom","forEach","ownerActive","SongCard","song","name","editingSongs","songIndex","display","flexDirection","justifyContent","alignItems","inlineSize","moveSongEarlierCallback","moveSongLaterCallback","removeCallback","AddSongCard","previewCallback","addCallback","searchSongs","pageToken","url","AddSongModal","results","setResults","addList","setAddList","previewId","setPreviewId","songLength","updateSongLength","handleSearch","result","cancelAddSongs","disabledButton","videoId","opts","height","addSong","_","i","removeSong","originalSongLength","addSongsCallback","EditPermissionsCard","collaboratorObj","updatePrivilegeLevel","removeCollaborator","AddCollaboratorCard","mashmateObj","addCollaborator","AddCollaboratorModal","setCollaborators","mashmatesNotCollaborators","m","c","updateCollaboratorsMut","updateCollaboratorsMutation","collaborator","tempCollaborators","privilegeLevelStr","newCollaborator","MashMixtapeCard","mergeMixtape","MashMixtapeModal","mashMixtapeMut","j","Math","random","includes","reqObj","Comment","replyText","setReplyText","comment","content","startReply","edge","publishingTime","replying","submitReply","replies","reply","pollingContext","ProvidePolling","polling","mixtapeId","setMixtapeId","queryObj","startPolling","newMixtapeId","useProvidePolling","MixtapePage","pathname","split","editingMixtapeTitle","setEditingMixtapeTitle","tempTitle","setTempTitle","editingMixtapeDescription","setEditingMixtapeDescription","tempDescription","setTempDescription","setEditingSongs","editList","setEditList","currentSongIndex","setCurrentSongIndex","autoplay","setAutoplay","commentText","setCommentText","replyIndex","setReplyIndex","requestPending","setRequestPending","hasListened","setHasListened","addSongsMut","addSongsMutation","addCommentMut","addCommentMutation","addReplyMut","addReplyMutation","editSongsMut","editSongsMutation","createMixtapeFromBaseMut","updateLikesMut","updateLikesMutation","updateDislikesMut","updateDislikesMutation","updateMixtapeTitleMut","updateMixtapeTitleMutation","updateMixtapeDescriptionMut","updateMixtapeDescriptionMutation","updateMixtapeGenresMut","updateMixtapeGenresMutation","updateMixtapePrivateMut","updateMixtapePrivateMutation","updateUserLikesMut","likedMixtapes","setLikeMixtape","dislikedMixtapes","updateUserLikesMutation","updateUserDislikesMut","setDislikeMixtape","updateUserDislikesMutation","addListenMutation","moveSongEarlier","tempSongsArr","slice","tempSong","list","moveSongLater","userCanEdit","options","editPreSelected","selectedList","tempPreSelected","preSelected","controlId","Check","checked","description","image","onPlay","onEnd","seekTo","playerVars","color","wasDisliked","incAmount","mixtapeGenres","like","wasLiked","dislike","dislikes","displayValue","selectedValues","onSelect","selectedItem","tempList","onRemove","selectionLimit","avoidHighlightFirstOption","resize","marginTop","comments","commentId","UserResultCard","filterTypes","SearchResults","userObj","mixtapeObj","getItems","isMixtape","UserPage","otherUserId","sendMMRequestMut","sendMashmateRequestMutation","followMut","followUserMutation","incFollowersCountMut","incrementUserFollowCountMutation","unfollowMut","unfollowUserMutation","decFollowersCountMut","decrementUserFollowCountMutation","marginLeft","seen","newMashmateRequest","idToUnfollow","idToFollow","Redirect","PrivateRoute","rest","render","state","from","Splash","LoginForm","setUsername","invalidLoginCreds","setInvalidLoginCreds","tryLogin","active","setSignup","setForgotPassword","hidden","SignUpForm","setEmail","emailRegex","noValidate","required","test","userCreated","exitSignUp","emailExists","usernameExists","ForgotPasswordForm","receivedEmailCode","setReceivedEmailCode","tempEmail","setTempEmail","setTempCode","code","cancelForgotPassword","ReactivateAccount","reactivateAccountMut","reactivateAccountMutation","exitReactivate","SignIn","setReactivateAccount","App","path","exact","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.9e78783a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headphones w rainbow w text.62ba77c3.svg\";","export async function login(usernameOrEmail, password){\r\n    const rawResponse = fetch(\"http://localhost:3000/auth/login\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n            username: usernameOrEmail,\r\n            password: password\r\n        })\r\n    });\r\n\r\n    const response = await rawResponse;\r\n\r\n    if(response.ok){\r\n        return response.json();\r\n    } else {\r\n        return {error: response.status, message: await response.text()}\r\n    }\r\n}\r\n\r\nexport async function logout(){\r\n    const rawResponse = fetch(\"http://localhost:3000/auth/logout\", {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n        headers: {\r\n            Accept: \"none\",\r\n        }\r\n    });\r\n\r\n    const response = await rawResponse;\r\n\r\n    if(response.ok){\r\n        return response.text();\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport async function signup(username, email, password){\r\n    const rawResponse = fetch(\"http://localhost:3000/auth/signup\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            email: email,\r\n            password: password\r\n        })\r\n    });\r\n\r\n    const response = await rawResponse;\r\n    \r\n    if(response.ok){\r\n        return response.json();\r\n    } else {\r\n        return {error: response.status, message: await response.text()}\r\n    }\r\n    \r\n}\r\n\r\nexport async function getUser(){\r\n    const rawResponse = fetch(\"http://localhost:3000/auth/user\", {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        }\r\n    })\r\n\r\n    const response = await rawResponse;\r\n\r\n    if(response.ok){\r\n        return response.json();\r\n    } else {\r\n        return {error: response.status, message: await response.text()}\r\n    }\r\n}\r\n\r\nexport async function changePassword(username, password, newPassword){\r\n    const rawResponse = fetch(\"http://localhost:3000/auth/changePassword\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n            newPassword: newPassword\r\n        })\r\n    });\r\n\r\n    const response = await rawResponse;\r\n\r\n    if(response.ok){\r\n        return response.text();\r\n    } else {\r\n        return {error: response.status, message: await response.text()}\r\n    }\r\n}\r\n\r\nexport async function forgotPassword(email){\r\n    const rawResponse = fetch(\"http://localhost:3000/auth/forgotPassword\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n            email: email,\r\n        })\r\n    });\r\n\r\n    const response = await rawResponse;\r\n\r\n    if(response.ok){\r\n        return response.text();\r\n    } else {\r\n        return {error: response.status, message: await response.text()}\r\n    }\r\n}\r\n\r\nexport async function resetPassword(email, tempCode, newPassword){\r\n    const rawResponse = fetch(\"http://localhost:3000/auth/verifyCode\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n            email: email,\r\n            tempCode: tempCode,\r\n            newPassword: newPassword\r\n        })\r\n    });\r\n\r\n    const response = await rawResponse;\r\n\r\n    if(response.ok){\r\n        return response.text();\r\n    } else {\r\n        return {error: response.status, message: await response.text()}\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    login as loginPassport,\r\n    logout as logoutPassport,\r\n    signup as signupPassport,\r\n    getUser as getUserPassport,\r\n    changePassword as changePasswordPassport,\r\n    forgotPassword as forgotPasswordPassport,\r\n    resetPassword as resetPasswordPassport} from \"../services/authService\";\r\n\r\nconst authContext = React.createContext();\r\n\r\n// Make auth available to all children wrapped in this\r\nexport function ProvideAuth({children}){\r\n    const auth = useProvideAuth();\r\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>\r\n}\r\n\r\n// Hook for child components to get the auth object\r\nexport const useAuth = () => {\r\n    return React.useContext(authContext);\r\n}\r\n\r\n// Provider that creates auth object and handles state\r\nfunction useProvideAuth(){\r\n    const [user, setUser] = React.useState(null);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [initialized, setInitialized] = React.useState(false);\r\n\r\n    const login = (usernameOrEmail, password) => {\r\n        setLoading(true);\r\n        return loginPassport(usernameOrEmail, password)\r\n            .then(userOrError => {\r\n                if(userOrError.error){\r\n                    // We have an error, so just return it without setting user\r\n                    setLoading(false);\r\n                    return userOrError;\r\n                } else {\r\n                    // We have a valid user from login, so set user object\r\n                    setLoading(false);\r\n                    setUser(userOrError);\r\n                    return userOrError;\r\n                }\r\n            });\r\n    }\r\n\r\n    const logout = () => {\r\n        setLoading(true);\r\n        return logoutPassport().then(success => {\r\n            if(success){\r\n                setUser(false);\r\n            }\r\n            setLoading(false);\r\n            return success;\r\n        });\r\n    }\r\n\r\n    const forgotPassword = (email) => {\r\n        return forgotPasswordPassport(email);\r\n    }\r\n\r\n    const resetPassword = (email, tempCode, newPassword) => {\r\n        return resetPasswordPassport(email, tempCode, newPassword);\r\n    }\r\n\r\n    const signup = (username, email, password) => {\r\n        setLoading(true);\r\n        return signupPassport(username, email, password).then(userOrError => {\r\n            if(userOrError.error){\r\n                // We have an error, so just return the error without setting user\r\n                setLoading(false);\r\n                return userOrError;\r\n            } else {\r\n                // We just created a valid user, so set the user object\r\n                setUser(userOrError);\r\n                return userOrError;\r\n            }\r\n        });\r\n    }\r\n\r\n    const doOptimisticUpdate = (userFields) => {\r\n        if(user){\r\n            for(let key in userFields){\r\n                if(user[key] !== undefined){\r\n                    user[key] = userFields[key];\r\n                }\r\n            }\r\n            setUser(user);\r\n        }\r\n    }\r\n\r\n    // Retrieves an UPDATED version of the user from the database\r\n    const getUser = (userFields) => {\r\n        if(userFields !== undefined){\r\n            doOptimisticUpdate(userFields);\r\n        }\r\n        setLoading(true);\r\n        return getUserPassport().then(userOrError => {\r\n            if(userOrError.error){\r\n                setLoading(false);\r\n                return userOrError;\r\n            } else {\r\n                setUser(userOrError);\r\n                setLoading(false);\r\n                return userOrError;\r\n            }\r\n        });\r\n    }\r\n\r\n    const changePassword = (oldPassword, newPassword) => {\r\n        return changePasswordPassport(user.username, oldPassword, newPassword).then(messageOrError => messageOrError);\r\n    }\r\n\r\n    // If provideAuth is being called, the app was just created, so see if a user session still exists\r\n    // from a previously obtained cookie\r\n    if(!initialized){\r\n        setInitialized(true);\r\n        getUser();\r\n    }\r\n    \r\n\r\n    return {\r\n        user,\r\n        loading,\r\n        login,\r\n        logout,\r\n        signup,\r\n        getUser,\r\n        changePassword,\r\n        forgotPassword,\r\n        resetPassword\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/navbar-logo.b91dbd63.svg\";","export const NavbarLinks = {\r\n  HOTTEST_MIXTAPES: 1,\r\n  MY_MIXTAPES: 2,\r\n  ACCOUNT: 3\r\n};\r\n","import React from \"react\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { NavbarLinks } from \"../../data/NavbarLinks\";\r\n\r\nimport \"./NavbarStyle.css\";\r\n\r\nexport default function Navbar(props){\r\n    const history = useHistory();\r\n\r\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n    const [scrollPastZero, setScrollPastZero] = React.useState(false);\r\n\r\n    const checkScroll = () => {\r\n        setScrollPastZero(window.pageYOffset > 0);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        // Add scroll event\r\n        window.addEventListener('scroll', checkScroll, {passive: true});\r\n\r\n        // When component unmounts, remove the event listener\r\n        return () => {\r\n            window.removeEventListener('scroll', checkScroll);\r\n        }\r\n    })\r\n\r\n\r\n    const doSearch = () => {\r\n        if(searchTerm !== \"\"){\r\n            history.push(\"/SearchResults/\" + searchTerm + \"/Mixtapes\");\r\n        }\r\n    }\r\n\r\n    const handleSearch = (event) => {\r\n        event.preventDefault();\r\n        doSearch();\r\n    }\r\n\r\n    return (\r\n        <ul id=\"navbar\" className={scrollPastZero ? \"detached\" : \"\"}>\r\n            <li id=\"searchbar-item\">\r\n            <Form inline id=\"search-form\" onSubmit={handleSearch}>\r\n                <SearchIcon id=\"search-icon\"/>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Search\"\r\n                    id=\"searchbar\"\r\n                    onChange={(event) => setSearchTerm(event.target.value)}\r\n                />\r\n            </Form>\r\n            </li>\r\n            <li\r\n                className={\"nav-item\" + (props.currentPage === NavbarLinks.HOTTEST_MIXTAPES ? \" selected\": \"\")}\r\n                onClick={() => history.push(\"/HottestMixtapes\")}    >\r\n                <div>Hottest Mixtapes</div>\r\n            </li>\r\n            <li\r\n                className={\"nav-item\" + (props.currentPage === NavbarLinks.MY_MIXTAPES ? \" selected\": \"\")}\r\n                onClick={() => history.push(\"/MyMixtapes\")}    >\r\n                <div>My Mixtapes</div>\r\n            </li>\r\n            <li\r\n                className={\"nav-item\" + (props.currentPage === NavbarLinks.ACCOUNT ? \" selected\": \"\")}\r\n                onClick={() => history.push(\"/Account\")}>\r\n                <div>Account</div>\r\n            </li>\r\n            <img src={require(\"../../images/navbar-logo.svg\")} alt=\"logo\" id=\"navbar-logo\" className={scrollPastZero ? \"scrolled\" : \"\"}></img>\r\n        </ul>\r\n    )\r\n}","import React from \"react\";\r\n\r\nimport { DropdownButton, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\n\r\nimport \"./DropdownStyle.css\"\r\n\r\nconst CustomDropdown = (props) => {\r\n  const [selected, setSelected] = React.useState(props.defaultIndex !== undefined ? props.items[props.defaultIndex] : props.items[0]);\r\n\r\n  return (\r\n    <DropdownButton\r\n      as={ButtonGroup}\r\n      title={selected}\r\n      onClick={(event) => event.stopPropagation()}\r\n    >\r\n      {props.items.map((item) => (\r\n        <Dropdown.Item\r\n          onClick={() => {\r\n            setSelected(item);\r\n            props.selectionCallback(item);\r\n          }}\r\n          eventKey={item}\r\n          key={item}\r\n        >\r\n          {item}\r\n        </Dropdown.Item>\r\n      ))}\r\n    </DropdownButton>\r\n  );\r\n};\r\n\r\nexport default CustomDropdown;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport \"./IconButtonStyle.css\";\r\n\r\nconst IconButton = (props) => {\r\n  return (\r\n    <Button\r\n      variant=\"outline-secondary\"\r\n      className=\"icon-button\"\r\n      onClick={props.callback || props.onClick}\r\n      onMouseDown={props.onMouseDown}\r\n      onMouseUp={props.onMouseUp}\r\n      disabled={!!props.disabled}\r\n    >\r\n      {props.component}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./MixtapeResultCardStyle.css\";\r\n\r\nconst MixtapeResultCard = (props) => {\r\n  return (\r\n    <div className=\"mixtape-result-card\" key={props.mixtape.id + props.index}>\r\n      <div className={\"title\" + (props.index%2 === 0 ? \" even\" : \" odd\")}>\r\n        <Link className=\"mm-link-dark\" to={\"/Mixtape/\" + props.mixtape._id}>{props.mixtape.title}</Link>\r\n        <div className=\"stats\">\r\n          <div>Likes: {props.mixtape.likes}</div>\r\n          <div>Listens: {props.mixtape.listens}</div>\r\n          {/* <div>Genres: {props.mixtape.genres.length < 5 ? props.mixtape.genres.join(\", \") : props.mixtape.genres.slice(0, 4).join(\", \") + \"...\"}</div> */}\r\n          <div>Genres: {props.mixtape.genres.join(\", \")}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"mixtape-image\">\r\n        {props.mixtape.songs.length > 0 && <img src={\"https://img.youtube.com/vi/\" + props.mixtape.songs[0].youtubeId + \"/0.jpg\"} alt=\"\" className=\"thumbnail-image\"/>}\r\n      </div>\r\n      <div className=\"mixtape-details\">Mixed By: <Link to={\"/User/\" + props.mixtape.ownerId} className=\"mm-link-pink\">{props.mixtape.ownerName}</Link></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MixtapeResultCard;\r\n","import { gql, ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nexport const mixtapesClient = new ApolloClient({\r\n    uri: \"http://localhost:3000/Mixtapes\",\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nexport const getMixtape = gql`\r\nquery getMixtape($id: String!){\r\n  mixtape(id: $id){\r\n    _id,\r\n    title,\r\n    description,\r\n    genres,\r\n    image,\r\n    songs {\r\n      name\r\n      youtubeId\r\n    },\r\n    ownerId,\r\n    ownerName,\r\n    private,\r\n    listens,\r\n    likes,\r\n    dislikes,\r\n    collaborators {\r\n      userId,\r\n      username,\r\n      privilegeLevel\r\n    }\r\n    timeCreated\r\n    comments {\r\n      id\r\n      userId\r\n      username\r\n      content\r\n      publishingTime\r\n      replies {\r\n        userId\r\n        username\r\n        content\r\n        publishingTime\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const getHottestMixtapes = gql`\r\nquery getHottestMixtapesQuery($userId: String!, $criteria: String!, $skip: Int!, $limit: Int!, $following: [String]!, $genrePreferences: [genrePreferences]!){\r\n  hottestMixtapes(userId: $userId, criteria: $criteria, skip: $skip, limit: $limit, following: $following, genrePreferences: $genrePreferences){\r\n    _id,\r\n    title,\r\n    description,\r\n    genres,\r\n    image,\r\n    songs{\r\n      youtubeId\r\n    },\r\n    ownerId,\r\n    ownerName,\r\n    listens,\r\n    likes,\r\n    listens,\r\n  }\r\n}\r\n`\r\n\r\nexport const getUserMixtapes = gql`\r\n  query Mixtapes($userId: String!){\r\n    getUserMixtapes(userId: $userId){\r\n      _id,\r\n      title,\r\n      description,\r\n      genres,\r\n      image,\r\n      ownerId,\r\n      ownerName,\r\n      private,\r\n      listens,\r\n      likes,\r\n      timeCreated,\r\n      collaborators {\r\n        userId,\r\n        username,\r\n        privilegeLevel\r\n      }\r\n      songs {\r\n        youtubeId,\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const getAllUserMixtapes = gql`\r\n  query AllUserMixtapes($userId: String!){\r\n    getAllUserMixtapes(userId: $userId){\r\n      _id,\r\n      title,\r\n      description,\r\n      genres,\r\n      image,\r\n      ownerId,\r\n      ownerName,\r\n      private,\r\n      listens,\r\n      likes,\r\n      timeCreated,\r\n      collaborators {\r\n        userId,\r\n        username,\r\n        privilegeLevel\r\n      }\r\n      songs {\r\n        youtubeId,\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const getUserPageMixtapes = gql`\r\n  query UserPageMixtapes($userId: String!, $otherUserId: String!){\r\n    getUserPageMixtapes(userId: $userId, otherUserId: $otherUserId){\r\n      _id,\r\n      title,\r\n      description,\r\n      genres,\r\n      image,\r\n      ownerId,\r\n      ownerName,\r\n      private,\r\n      listens,\r\n      likes,\r\n      timeCreated,\r\n      collaborators {\r\n        userId,\r\n        username,\r\n        privilegeLevel\r\n      }\r\n      songs {\r\n        youtubeId,\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const queryMixtapes = gql`\r\nquery qMixtapes($searchTerm: String!, $userId: String!, $skip: Int!, $limit: Int!){\r\n  queryMixtapes(searchTerm: $searchTerm, userId: $userId, skip: $skip, limit: $limit){\r\n    _id,\r\n    title,\r\n    description,\r\n    genres,\r\n    image,\r\n    songs{\r\n      youtubeId\r\n    },\r\n    ownerId,\r\n    ownerName,\r\n    listens,\r\n    likes,\r\n    timeCreated,\r\n  }\r\n}`\r\n\r\nexport const createMixtape = gql`\r\nmutation createMixtape(\r\n  $ownerId: String!\r\n  $ownerName: String!){\r\n  createNewMixtape(\r\n    ownerId: $ownerId\r\n    ownerName: $ownerName\r\n  ){\r\n    _id,\r\n    title,\r\n    description,\r\n    genres,\r\n    image,\r\n    ownerId,\r\n    ownerName,\r\n    private,\r\n    listens,\r\n    likes,\r\n    timeCreated,\r\n    collaborators {\r\n      userId,\r\n      username,\r\n      privilegeLevel\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const addMixtape = gql`\r\nmutation AddMixtape(\r\n  $title: String!\r\n  $description: String!\r\n  $genres: [String]!\r\n  $image: [String]!\r\n  $songs: [songInput]!\r\n  $ownerId: String!\r\n  $ownerName: String!\r\n  $listens: Int!\r\n  $likes: Int!\r\n  $dislikes: Int!\r\n  $comments: [commentInput]!\r\n  $private: Boolean!\r\n  $collaborators: [collaboratorsInput]!\r\n  $ownerActive: Boolean!\r\n  ){\r\n    addMixtape(\r\n      title: $title\r\n      description: $description\r\n      genres: $genres\r\n      image: $image\r\n      songs: $songs\r\n      ownerId: $ownerId\r\n      ownerName: $ownerName\r\n      listens: $listens\r\n      likes: $likes\r\n      dislikes: $dislikes\r\n      comments: $comments\r\n      private: $private\r\n      collaborators: $collaborators\r\n      ownerActive: $ownerActive\r\n    ){\r\n      _id\r\n      title\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const addSongs = gql`\r\nmutation addSongs($id: String!, $songs: [songInput]!){\r\n  addSongs(id: $id, songs: $songs){\r\n    _id\r\n    songs{\r\n      youtubeId,\r\n      name\r\n    }\r\n  }\r\n}`\r\n\r\nexport const editSongs = gql`\r\nmutation editSongs($id: String!, $songs: [songInput]!){\r\n  editSongs(id: $id, songs: $songs){\r\n    _id\r\n    songs{\r\n      youtubeId,\r\n      name\r\n    }\r\n  }\r\n}`\r\n\r\nexport const addComment = gql`\r\nmutation addComment(\r\n  $id: String!,\r\n  $comment: commentInput!\r\n){\r\n  addComment(\r\n    id: $id\r\n    comment: $comment\r\n    ){\r\n    _id\r\n    comments {\r\n      id\r\n      userId\r\n      username\r\n      content\r\n      publishingTime\r\n    }\r\n  }\r\n}`;\r\n\r\nexport const addReply = gql`\r\nmutation addReply(\r\n  $id: String!,\r\n  $commentId: String!,\r\n  $reply: replyInput!\r\n){\r\n  addReply(\r\n    id: $id,\r\n    commentId: $commentId,\r\n    reply: $reply\r\n    ){\r\n    _id\r\n    comments {\r\n      replies {\r\n        userId\r\n        username\r\n        content\r\n        publishingTime\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const createMixtapeFromBase = gql`\r\nmutation createMixtapeFromBase(\r\n  $ownerId: String!\r\n  $ownerName: String!\r\n  $title: String!\r\n  $description: String!\r\n  $genres: [String]!\r\n  $image: [String]!\r\n  $songs: [songInput]!\r\n){\r\n  createMixtapeFromBase(\r\n    ownerId: $ownerId\r\n    ownerName: $ownerName\r\n    title: $title\r\n    description: $description\r\n    genres: $genres\r\n    image: $image\r\n    songs: $songs\r\n  ){\r\n    _id\r\n  }\r\n}\r\n`;\r\n\r\nexport const mashMixtape = gql`\r\nmutation mashMixtape(\r\n  $id: String!,\r\n  $title: String!,\r\n  $songs: [songInput]!,\r\n  $genres: [String]!\r\n){\r\n  mashMixtape(id: $id, title: $title, songs: $songs, genres: $genres){\r\n    _id,\r\n    title,\r\n    songs {\r\n      youtubeId,\r\n      name\r\n    },\r\n    genres\r\n  }\r\n}\r\n`;\r\n\r\nexport const removeMixtape = gql`\r\nmutation removeMixtape($id: String!){\r\n  removeMixtape(id: $id){\r\n    _id\r\n  }\r\n}`\r\n\r\nexport const updateLikes = gql`\r\nmutation updateLikes($id: String!, $userId: String!, $incAmount: Int!){\r\n  updateLikes(id: $id, userId: $userId, incAmount: $incAmount){\r\n    _id,\r\n    likes,\r\n    dislikes\r\n  }\r\n}`\r\n\r\nexport const updateDislikes = gql`\r\nmutation updateDislikes($id: String!, $incAmount: Int!){\r\n  updateDislikes(id: $id, incAmount: $incAmount){\r\n    _id,\r\n    dislikes,\r\n    likes\r\n  }\r\n}`\r\n\r\nexport const addListen = gql`\r\nmutation addListen($id: String!, $userId: String!){\r\n  addListen(id: $id, userId: $userId){\r\n    _id,\r\n    listens\r\n  }\r\n}`\r\n\r\nexport const updateMixtapeTitle = gql`\r\nmutation updateMixtapeTitle($id: String!, $title: String!){\r\n  updateMixtapeTitle(id: $id, title: $title){\r\n    _id,\r\n    title,\r\n  }\r\n}`\r\n\r\nexport const updateMixtapeDescription = gql`\r\nmutation updateMixtapeDescription($id: String!, $description: String!){\r\n  updateMixtapeDescription(id: $id, description: $description){\r\n    _id,\r\n    description,\r\n  }\r\n}`\r\n\r\nexport const updateMixtapeGenres = gql`\r\nmutation updateMixtapeGenres($id: String!, $genres: [String]!){\r\n  updateMixtapeGenres(id: $id, genres: $genres){\r\n    _id,\r\n    genres,\r\n  }\r\n}`\r\n\r\nexport const updateMixtapePrivate = gql`\r\nmutation updateMixtapePrivate($id: String!, $private: Boolean!){\r\n  updatePrivate(id: $id, private: $private){\r\n    _id,\r\n    private\r\n  }\r\n}\r\n`\r\n\r\nexport const updateOwnerActive = gql`\r\nmutation updateOwnerActiveStatus($id: String!, $ownerActive: Boolean!){\r\n  updateOwnerActive(id: $id, ownerActive: $ownerActive){\r\n    _id,\r\n    ownerActive\r\n  }\r\n}\r\n`\r\n\r\nexport const updateCollaborators = gql`\r\nmutation updateCollaboratorsOnMixtape($id: String!, $collaborators: [collaboratorsInput]!){\r\n  updateCollaborators(id: $id, collaborators: $collaborators){\r\n    _id,\r\n    collaborators{\r\n      userId,\r\n      username,\r\n      privilegeLevel\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const createMixtapeAdmin = gql`\r\nmutation createMixtapeAdmin(\r\n  $ownerId: String!,\r\n  $ownerName: String!,\r\n  $title: String!,\r\n  $description: String!,\r\n  $genres: [String]!,\r\n  $songs: [songInput]!,\r\n  $listens: Int!,\r\n  $likes: Int!,\r\n  $dislikes: Int!,\r\n  $collaborators: [collaboratorsInput]!\r\n){\r\n  createMixtapeAdmin(\r\n    ownerId: $ownerId\r\n    ownerName: $ownerName\r\n    title: $title\r\n    description: $description\r\n    genres: $genres\r\n    songs: $songs\r\n    listens: $listens\r\n    likes: $likes\r\n    dislikes: $dislikes\r\n    collaborators: $collaborators\r\n  ){\r\n    _id\r\n  }\r\n}\r\n`","import React from \"react\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nimport { NavbarLinks } from \"../../data/NavbarLinks\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport Dropdown from \"../../components/Dropdown/Dropdown\";\r\nimport IconButton from \"../../components/IconButton/IconButton\";\r\nimport MixtapeResultCard from \"../../components/MixtapeResultCard/MixtapeResultCard\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { mixtapesClient, getHottestMixtapes } from \"../../services/mixtapesService\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nimport { useAuth } from \"../../utils/use-auth\";\r\n\r\nimport \"./HottestMixtapesStyle.css\";\r\n\r\nconst items = [\r\n  \"Hottest Mixtapes Today\",\r\n  \"Hottest Mixtapes This Week\",\r\n  \"Hottest Mixtapes of All Time\",\r\n  \"Follower Mixtapes Today\",\r\n  \"Follower Mixtapes This Week\",\r\n  \"Follower Mixtapes of All Time\",\r\n];\r\n\r\nconst sortCriteria = {\r\n  \"Hottest Mixtapes Today\": \"day\",\r\n  \"Hottest Mixtapes This Week\": \"week\",\r\n  \"Hottest Mixtapes of All Time\": \"allTime\",\r\n  \"Follower Mixtapes Today\": \"dayFollowers\",\r\n  \"Follower Mixtapes This Week\": \"weekFollowers\",\r\n  \"Follower Mixtapes of All Time\": \"allTimeFollowers\",\r\n}\r\n\r\nconst HottestMixtapes  = (props) => {\r\n  // Hook into the auth state\r\n  const auth = useAuth();\r\n\r\n  // Hook into browser history (for navigating)\r\n  const history = useHistory();\r\n\r\n  const {criteria, skip} = useParams();\r\n\r\n  let {loading, data, refetch} = useQuery(getHottestMixtapes, {client: mixtapesClient, variables: {userId: auth.user._id, criteria: (criteria ? criteria : \"day\"), skip: (skip ? parseInt(skip) : 0) * 10, limit: 10, following: auth.user.following, genrePreferences: auth.user.genrePreferences.map(x=>({genre: x.genre, val: x.val}))}, pollInterval: 1000});\r\n\r\n  const handleChangeCriteria = (selection) => {\r\n    const newCriteria = sortCriteria[selection];\r\n    history.push(\"/HottestMixtapes/\" + newCriteria + \"/0\");\r\n  }\r\n\r\n  const navigatePage = (increment) => {\r\n    const newCriteria = criteria ? criteria : \"day\";\r\n    let newSkip = (skip ? parseInt(skip) : 0) + increment;\r\n    if(newSkip < 0){\r\n      newSkip = 0;\r\n    }\r\n\r\n    history.push(\"/HottestMixtapes/\" + newCriteria + \"/\" + newSkip);\r\n  }\r\n\r\n  return (\r\n    <div className=\"mm-container scroll-screen\">\r\n      <Navbar currentPage={NavbarLinks.HOTTEST_MIXTAPES} />\r\n      <h1 className=\"page-title\">Hottest Mixtapes\r\n      <div>\r\n        <Dropdown\r\n          title=\"MyDropdown\"\r\n          items={items}\r\n          selectionCallback={handleChangeCriteria}\r\n        />\r\n        <IconButton\r\n          component={<RefreshIcon />}\r\n          callback={() => refetch()}\r\n        ></IconButton>\r\n      </div>\r\n      </h1>\r\n      <div id=\"mixtape-list\">\r\n        {loading && (\r\n          <div className=\"loading\">\r\n            <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        )}\r\n        {!loading && data.hottestMixtapes.map((mixtape, index) => (\r\n          <MixtapeResultCard mixtape={mixtape} index={index}/>\r\n        ))}\r\n      </div>\r\n      <div className=\"page-navigator\">\r\n        <IconButton component={<ArrowBackIcon/>} disabled={skip ? parseInt(skip) === 0 : true} onClick={() => navigatePage(-1)}></IconButton>\r\n          <div>{skip ? skip : \"0\"}</div>\r\n        <IconButton component={<ArrowForwardIcon/>} disabled={loading || data.hottestMixtapes.length < 10} onClick={() => navigatePage(1)}></IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HottestMixtapes;\r\n","import React from \"react\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"../IconButton/IconButton\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport {mixtapesClient, removeMixtape as removeMixtapeMut} from \"../../services/mixtapesService\"\r\nimport { useAuth } from \"../../utils/use-auth\";\r\n\r\nimport \"./MixtapeCardStyle.css\";\r\n\r\nconst MixtapeCard = (props) => {\r\n\r\n  const auth = useAuth();\r\n\r\n  const [removeMixtape] = useMutation(removeMixtapeMut, {client: mixtapesClient});\r\n  const doRemoveMixtape = () => {removeMixtape({variables: {id: props.mixtape._id}}); props.refetchMyMixtapes();}\r\n\r\n  return (\r\n    <div className=\"mixtape-card\">\r\n      <div className={\"title\" + (props.index%2 === 0 ? \" even\" : \" odd\")}>\r\n        <div>\r\n          <Link className=\"mm-link-dark\" to={\"/Mixtape/\" + props.mixtape._id}>{props.mixtape.title}</Link>\r\n          <div className=\"details\">\r\n            {props.mixtape.private && <div><VisibilityOffIcon /> <span>Private</span></div>}\r\n            {!props.mixtape.private && <div><VisibilityIcon /> <span>Public</span></div>}\r\n            <div><GroupIcon /> <span>{props.mixtape.collaborators.length + \" Collaborator\" + (props.mixtape.collaborators.length !== 1 ? \"s\" : \"\")}</span> </div>\r\n            {props.mixtape.ownerId === auth.user._id && <div><HowToRegIcon /><span>You own this</span></div>}\r\n          </div>\r\n        </div>\r\n        {props.mixtape.ownerId === auth.user._id && (<IconButton component={<CancelIcon />} onClick={() => doRemoveMixtape()}/>)}\r\n      </div>\r\n      <div className=\"mixtape-image\">\r\n        {props.mixtape.songs.length > 0 && <img src={\"https://img.youtube.com/vi/\" + props.mixtape.songs[0].youtubeId + \"/0.jpg\"} alt=\"\" className=\"thumbnail-image\"/>}\r\n      </div>\r\n      <div className=\"mixtape-details\">Owner: <Link to={\"/User/\" + props.mixtape.ownerId} className=\"mm-link-pink\">{props.mixtape.ownerName}</Link></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MixtapeCard;\r\n","import React from \"react\";\r\nimport { Toast, Alert } from \"react-bootstrap\";\r\n\r\nimport \"./ToastStyle.css\";\r\n\r\nconst toastContext = React.createContext();\r\n\r\nexport function ProvideToast({children}){\r\n    const toaster = useProvideToast();\r\n\r\n    const closeToast = (event, toast) => {\r\n        if(event){\r\n            // We closed it with a click\r\n            const toastElement = event.target.parentElement.parentElement.parentElement;\r\n            toastElement.classList.add(\"removing-toast\");\r\n\r\n            setTimeout(() => toaster.hide(toast), 200);\r\n        } else {\r\n            toaster.hide(toast);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <toastContext.Provider value={toaster}>\r\n            {/* Render the toasts on top of all other content. Don't show more than 5 at a time. */}\r\n            <div className=\"toaster-wrapper\">\r\n            {toaster.currentAlert !== null &&<div className=\"alert-wrapper\">\r\n                <Alert \r\n                    variant={toaster.currentAlert.type ? toaster.currentAlert.type : \"danger\"}\r\n                    show={toaster.showAlert}\r\n                    onClose={toaster.hideAlert} dismissible\r\n                    className=\"toast-alert\">\r\n                    <Alert.Heading>{toaster.currentAlert.header}</Alert.Heading>\r\n                    <p>\r\n                    {toaster.currentAlert.message}\r\n                    </p>\r\n                </Alert>\r\n            </div>}\r\n            <div className=\"toast-wrapper\">\r\n                {toaster.toastList.map((toast, index) => {\r\n                    return (<>\r\n                        {index < 5 &&\r\n                        (<Toast\r\n                            key={toast.header + toast.message}\r\n                            className=\"adding-toast custom-toast\"\r\n                            show={toaster.showToastList[index]}\r\n                            onClose={(event) => closeToast(event, toast)}\r\n                            animation={false}\r\n                            delay={toast.getRemainingTime()}\r\n                            autohide\r\n                        >\r\n                            <Toast.Header>\r\n                            <strong className=\"mr-auto\">{toast.header}</strong>\r\n                            <small></small>\r\n                            </Toast.Header>\r\n                            <Toast.Body>{toast.message}</Toast.Body>\r\n                        </Toast>)}\r\n                        {index === 5 &&\r\n                        (<Toast\r\n                            key={toast.header + toast.message}\r\n                            className=\"adding-toast custom-toast\"\r\n                            show={toaster.showToastList[index]}\r\n                            onClose={() => closeToast(undefined, toast)}\r\n                            delay={1}\r\n                            autohide>\r\n                            <Toast.Header>\r\n                            <strong className=\"mr-auto\">{toast.header}</strong>\r\n                            <small></small>\r\n                            </Toast.Header>\r\n                            <Toast.Body>{toast.message}</Toast.Body>\r\n                        </Toast>)}\r\n                    </>)\r\n                    })}\r\n            </div>\r\n            </div>\r\n            {children}\r\n        </toastContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useToast = () => {\r\n    return React.useContext(toastContext);\r\n}\r\n\r\nexport class ToastData {\r\n    constructor(header, message) {\r\n        this.header = header;\r\n        this.message = message;\r\n        this.initTime = Date.now();\r\n        this.lifetime = 5000;\r\n    }\r\n\r\n    getRemainingTime = () => {\r\n        return this.lifetime - (Date.now() - this.initTime);\r\n    }\r\n\r\n    isAlive = () => {\r\n        return this.lifetime < (Date.now() - this.initTime);\r\n    }\r\n}\r\n\r\nexport class AlertData {\r\n    constructor(header, message, type) {\r\n        this.header = header;\r\n        this.message = message;\r\n        this.type = type;\r\n    }\r\n}\r\n\r\nfunction useProvideToast(){\r\n    const [toastList, setToastList] = React.useState([]);\r\n    const [showToastList, setShowToastList] = React.useState([]);\r\n    const [currentAlert, setAlert] = React.useState(null);\r\n    const [showAlert, setShowAlert] = React.useState(false);\r\n\r\n    const notify = (header, message) => {\r\n        let toast = new ToastData(header, message)\r\n\r\n        // Add a toast\r\n        const newToastList = [toast, ...toastList];\r\n\r\n        // Show it by default\r\n        const newShowToastList = [true, ...showToastList];\r\n\r\n        setToastList(newToastList);\r\n        setShowToastList(newShowToastList);\r\n    }\r\n\r\n    const hide = (toast) => {\r\n        const index = toastList.indexOf(toast);\r\n        const newShowToastList = [...showToastList];\r\n        newShowToastList[index] = false;\r\n        setShowToastList(newShowToastList);\r\n    }\r\n\r\n    const alert = (header, message, type) => {\r\n        let alert = new AlertData(header, message, type);\r\n        setAlert(alert);\r\n        setShowAlert(true);\r\n    }\r\n\r\n    const hideAlert = () => {\r\n        setShowAlert(false);\r\n    }\r\n\r\n    return {\r\n        toastList,\r\n        showToastList,\r\n        notify,\r\n        hide,\r\n        currentAlert,\r\n        showAlert,\r\n        alert,\r\n        hideAlert\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\n\r\nimport { NavbarLinks } from \"../../data/NavbarLinks\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport Dropdown from \"../../components/Dropdown/Dropdown\";\r\nimport IconButton from \"../../components/IconButton/IconButton\";\r\nimport MixtapeCard from \"../../components/MixtapeCard/MixtapeCard\";\r\nimport { mixtapesClient, getUserMixtapes, createMixtape as createMixtapeMut} from \"../../services/mixtapesService\";\r\nimport { useAuth } from \"../../utils/use-auth\";\r\nimport { useToast } from \"../../utils/use-toast\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst items = [\r\n    \"All Mixtapes\",\r\n    \"Owner\",\r\n    \"Shared With Me\",\r\n    \"Can Edit\",\r\n    \"Can View\"\r\n  ];\r\n\r\nexport default function Test(props){\r\n  // Hook into the auth\r\n  const auth = useAuth();\r\n\r\n  // Hook into notifications\r\n  const toaster = useToast();\r\n\r\n  // Hook into history\r\n  const history = useHistory();\r\n\r\n  let {loading, data, refetch} = useQuery(getUserMixtapes, {client: mixtapesClient, variables:{userId: auth.user._id}, pollInterval: 1000});\r\n\r\n  let [filterKey, setFilterKey] = useState(\"All Mixtapes\");\r\n\r\n  const filterFunctions = {\r\n    \"All Mixtapes\": (mixtape) => true,\r\n    \"Owner\": (mixtape) => mixtape.ownerId === auth.user._id,\r\n    \"Shared With Me\": (mixtape) => mixtape.collaborators.reduce((acc, x) => x.userId === auth.user._id || acc, false),\r\n    \"Can Edit\": (mixtape) => mixtape.collaborators.reduce((acc, x) => (x.userId === auth.user._id && x.privilegeLevel === \"edit\") || acc, false),\r\n    \"Can View\": (mixtape) => mixtape.collaborators.reduce((acc, x) => (x.userId === auth.user._id && x.privilegeLevel === \"view\") || acc, false)\r\n  }\r\n\r\n  const [createMixtapeMutation] = useMutation(createMixtapeMut, {client: mixtapesClient, onCompleted: (data) => {    \r\n    // Extract new mixtape\r\n    const mixtape = data.createNewMixtape;\r\n    \r\n    // Notify the user a mixtape was created\r\n    toaster.notify(\"Mixtape Created\", \"You just created a new mixtape!\")\r\n\r\n    // Go to the new mixtape page\r\n    history.push(\"/Mixtape/\" + mixtape._id)\r\n  }});\r\n\r\n  const createMixtape = () => {\r\n    createMixtapeMutation({variables: {ownerId: auth.user._id , ownerName: auth.user.username}});\r\n  }\r\n\r\n    return (\r\n        <div className=\"mm-container scroll-screen\">\r\n        <Navbar currentPage={NavbarLinks.MY_MIXTAPES} />\r\n        <h1 className=\"page-title\">My Mixtapes\r\n        <div>\r\n        <Button variant=\"primary\" className=\"mm-btn\" style={{marginRight: \"2vw\"}} onClick={createMixtape}>\r\n                Create Mixtape\r\n              </Button>\r\n              <Dropdown\r\n                title=\"MyDropdown\"\r\n                items={items}\r\n                selectionCallback={(key) => setFilterKey(key)}\r\n              />\r\n          <IconButton\r\n            component={<RefreshIcon />}\r\n            callback={() => refetch()}\r\n          ></IconButton>\r\n        </div>\r\n        </h1>\r\n        {!loading && data.getUserMixtapes.filter(filterFunctions[filterKey]).reduce((acc, x) => [x, ...acc], []).map((mixtape, index) => (\r\n            <MixtapeCard mixtape={mixtape} key={mixtape._id} index={index} refetchMyMixtapes={refetch}/>\r\n        ))}\r\n    </div>\r\n    \r\n    )\r\n}","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"../IconButton/IconButton\";\r\n\r\nimport \"./MashmateCardStyle.css\";\r\n\r\nconst MashmateCard = (props) => {\r\n  return (\r\n    <Card className={\"mashmate-card\" + (props.index%2 === 0 ? \" even\" : \" odd\")} key={props.mashmate.id}>\r\n      <Link to={\"/User/\" + props.mashmate.id}>\r\n        <div className=\"mm-link-dark\">{props.mashmate.username}</div>\r\n      </Link>\r\n      <IconButton component={<CancelIcon />} onClick={() => props.remove(props.mashmate.id, props.mashmate.username)} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MashmateCard;\r\n","\r\nconst fmt = new Intl.DateTimeFormat('en-US', {dateStyle: \"short\", timeStyle: \"short\"});\r\nexport function formatDate(dateString) {\r\n  return fmt.format(new Date(dateString));\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"../IconButton/IconButton\";\r\nimport { formatDate } from \"../../utils/DateUtils\";\r\n\r\nimport \"./MashmateRequestCardStyle.css\";\r\n\r\nconst MashmateRequestCard = (props) => {\r\n  return (\r\n    <Card className={\"mashmate-request-card\" + (props.index%2 === 0 ? \" even\" : \" odd\")} key={props.mashmateRequest.senderId}>\r\n      <div className=\"mashmate-request-body\">\r\n        <div className=\"mashmate-request-title\">\r\n        \r\n        <Link to={\"/User/\" + props.mashmateRequest.senderId}>\r\n        <div className=\"mixtape-result-user mm-link-dark\"><b>{props.mashmateRequest.username}</b></div>\r\n        </Link>\r\n        </div>\r\n        <div className=\"mashmate-request-timeSent\">\r\n          {\" Time Sent: \" +\r\n            formatDate(props.mashmateRequest.timeSent)}\r\n        </div>\r\n      </div>\r\n      <div className=\"mashmate-request-responses\">\r\n        <IconButton component={<CheckCircleIcon />} onClick={() => props.resolve(props.mashmateRequest.senderId, props.mashmateRequest.username, true)} />\r\n        <IconButton component={<CancelIcon />} onClick={() => props.resolve(props.mashmateRequest.senderId, props.mashmateRequest.username, false)} />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MashmateRequestCard;\r\n","import React from \"react\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nimport IconButton from \"../../../components/IconButton/IconButton\";\r\nimport { useAuth } from \"../../../utils/use-auth\";\r\nimport { useToast } from \"../../../utils/use-toast\";\r\n\r\nconst ChangePassword = (props) => {\r\n    // Hook into the auth state\r\n    const auth = useAuth();\r\n\r\n    // Hook into notifications\r\n    const toaster = useToast();\r\n\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [newPassword, setNewPassword] = React.useState(\"\");\r\n\r\n    const [passwordVisible, setPasswordVisible] = React.useState(false);\r\n    const [newPasswordVisible, setNewPasswordVisible] = React.useState(false);\r\n\r\n    const [validated, setValidated] = React.useState(false);\r\n    const [isInvalid, setIsInvalid] = React.useState({password: false, newPassword: false});\r\n\r\n    const changePassword = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(newPassword.length < 6){\r\n            setIsInvalid({password: false, newPassword: true});\r\n            setValidated(true);\r\n        } else {\r\n            // Send the request to the backend\r\n            auth.changePassword(password, newPassword).then(res => {\r\n                if(res.error){\r\n                    setIsInvalid({password: true, newPassword: false});\r\n                    setValidated(true);\r\n                } else {\r\n                    // Success\r\n                    setPassword(\"\");\r\n                    setNewPassword(\"\");\r\n                    setValidated(false);\r\n\r\n                    // Notify user of success\r\n                    toaster.alert(\"Password Changed\", \"Your password was sucessfully changed.\", \"success\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form style={{width: \"25%\"}} onSubmit={changePassword}>\r\n            <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Row>\r\n                    <Col>\r\n                        <Form.Control\r\n                            type={passwordVisible ? \"text\" : \"password\"}\r\n                            placeholder=\"Old Password\"\r\n                            value={password}\r\n                            onChange={(event) => {setPassword(event.target.value); isInvalid.password = false; setIsInvalid(isInvalid)}}\r\n                            isInvalid={validated && isInvalid.password}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">Incorrect password.</Form.Control.Feedback>\r\n                    </Col>\r\n                    <Col md=\"auto\">\r\n                        <IconButton\r\n                            component={passwordVisible ? <VisibilityIcon/> : <VisibilityOffIcon/>}\r\n                            onMouseDown={() => setPasswordVisible(true)}\r\n                            onMouseUp={() => setPasswordVisible(false)}\r\n                        ></IconButton>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form.Group>\r\n            <Form.Group>\r\n            <Form.Label>New Password</Form.Label>\r\n            <Form.Row>\r\n                <Col>\r\n                    <Form.Control\r\n                        type={newPasswordVisible ? \"text\" : \"password\"}\r\n                        placeholder=\"New Password\"\r\n                        value={newPassword}\r\n                        onChange={(event) => {setNewPassword(event.target.value); isInvalid.newPassword = false; setIsInvalid(isInvalid)}}\r\n                        isInvalid={validated && isInvalid.newPassword}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">Your new password must be 6 or more characters in length.</Form.Control.Feedback>\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                    <IconButton\r\n                        component={newPasswordVisible ? <VisibilityIcon/> : <VisibilityOffIcon/>}\r\n                        onMouseDown={() => setNewPasswordVisible(true)}\r\n                        onMouseUp={() => setNewPasswordVisible(false)}\r\n                    ></IconButton>\r\n                </Col>\r\n            </Form.Row>\r\n        </Form.Group>\r\n        <Button className=\"mm-btn\" type=\"submit\" disabled={password === \"\" || newPassword === \"\"}>Change Password</Button>\r\n    </Form>\r\n    )\r\n}\r\n\r\nexport default ChangePassword;","import { gql, ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nexport const userClient = new ApolloClient({\r\n    uri: \"http://localhost:3000/users\",\r\n    cache: new InMemoryCache()\r\n})\r\n\r\nexport const getUsers = gql`\r\n{\r\n    users {\r\n        _id,\r\n        username,\r\n        email,\r\n        hashedPassword,\r\n        bio,\r\n        numFollowers,\r\n        active,\r\n        mixtapes,\r\n        receivedMashmateRequests {\r\n            senderId,\r\n            username,\r\n            timeSent,\r\n            seen\r\n        },\r\n        mashmates\r\n    }\r\n}`;\r\n\r\nexport const getUser = gql`\r\n    query User($id: String!){\r\n        user(id: $id){\r\n            _id,\r\n            username,\r\n            email,\r\n            hashedPassword,\r\n            bio,\r\n            numFollowers,\r\n            active,\r\n            mixtapes,\r\n            likedMixtapes,\r\n            dislikedMixtapes,\r\n            receivedMashmateRequests {\r\n                senderId,\r\n                username,\r\n                timeSent,\r\n                seen\r\n            },\r\n            mashmates {\r\n                id,\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const getUserByUsernameOrEmail = gql`\r\nquery User($usernameOrEmail: String!){\r\n    getUserByUsernameOrEmail(usernameOrEmail: $usernameOrEmail){\r\n        _id,\r\n        username,\r\n        email,\r\n        hashedPassword,\r\n        bio,\r\n        numFollowers,\r\n        active,\r\n        mixtapes,\r\n        likedMixtapes,\r\n        dislikedMixtapes,\r\n        receivedMashmateRequests {\r\n            senderId,\r\n            username,\r\n            timeSent,\r\n            seen\r\n        },\r\n        mashmates {\r\n            id,\r\n            username\r\n        }\r\n    }\r\n}`\r\n\r\nexport const queryUsers = gql`\r\nquery qUsers($searchTerm: String!, $skip: Int!, $limit: Int!){\r\n    queryUsers(searchTerm: $searchTerm, skip: $skip, limit: $limit){\r\n        _id,\r\n        username,\r\n        email,\r\n        hashedPassword,\r\n        bio,\r\n        numFollowers,\r\n        active,\r\n        mixtapes,\r\n        receivedMashmateRequests {\r\n            senderId,\r\n            username,\r\n            timeSent,\r\n            seen\r\n        },\r\n        mashmates {\r\n            id,\r\n            username\r\n        }\r\n    }\r\n}`\r\n\r\nexport const updateUserLikes = gql`\r\nmutation like(\r\n    $id: String!\r\n    $mixtapeId: String!\r\n    $mixtapeGenres: [String]!\r\n    $genrePreferences: [genrePreferencesInput]!\r\n    $like: Boolean!\r\n    $wasDisliked: Boolean!\r\n    ){\r\n    setLikeMixtape(\r\n        id: $id\r\n        mixtapeId: $mixtapeId\r\n        mixtapeGenres: $mixtapeGenres\r\n        genrePreferences: $genrePreferences\r\n        like: $like\r\n        wasDisliked: $wasDisliked\r\n    ){\r\n        _id\r\n        likedMixtapes\r\n        dislikedMixtapes\r\n        genrePreferences{\r\n            genre\r\n            val\r\n        }\r\n    }\r\n}`\r\n  \r\nexport const updateUserDislikes = gql`\r\n  mutation dislike(\r\n      $id: String!\r\n      $mixtapeId: String!\r\n      $mixtapeGenres: [String]!\r\n      $genrePreferences: [genrePreferencesInput]!\r\n      $dislike: Boolean!\r\n      $wasLiked: Boolean!\r\n  ){\r\n    setDislikeMixtape(\r\n        id: $id\r\n        mixtapeId: $mixtapeId\r\n        mixtapeGenres: $mixtapeGenres\r\n        genrePreferences: $genrePreferences\r\n        dislike: $dislike\r\n        wasLiked: $wasLiked\r\n    ){\r\n        _id\r\n        dislikedMixtapes\r\n        likedMixtapes\r\n        genrePreferences{\r\n            genre\r\n            val\r\n        }\r\n    }\r\n}`\r\n\r\nexport const updateBio = gql`\r\n    mutation newBio(\r\n        $id: String!\r\n        $bio: String!\r\n    ){\r\n        updateBio(\r\n            id: $id\r\n            bio: $bio\r\n        ){\r\n          _id\r\n          bio  \r\n        }\r\n    }\r\n`\r\n\r\nexport const deactivateAccount = gql`\r\nmutation deactivateUserAccount($id: String!){\r\n    deactivateAccount(id: $id){\r\n        active\r\n    }\r\n}\r\n`\r\n\r\nexport const reactivateAccount = gql`\r\nmutation reactivateUserAccount($id: String!){\r\n    reactivateAccount(id: $id){\r\n        active\r\n    }\r\n}\r\n`\r\n\r\nexport const sendMMRequest = gql`\r\nmutation sendMashmateRequest(\r\n    $id: String!,\r\n    $newMashmateRequest: mashmateRequestInput!\r\n    ){\r\n      sendMashmateRequest(\r\n        id: $id\r\n        newMashmateRequest: $newMashmateRequest\r\n        ){\r\n        _id\r\n        receivedMashmateRequests{\r\n            senderId\r\n            username\r\n            timeSent\r\n            seen\r\n        }\r\n    }\r\n}`\r\n  \r\nexport const resolveMashmateRequest = gql`\r\nmutation resolveMashmateRequest(\r\n    $id: String!,\r\n    $senderId: String!,\r\n    $username: String!,\r\n    $senderUsername: String!,\r\n    $accepted: Boolean!){\r\n        resolveMashmateRequest(\r\n            id: $id\r\n            senderId: $senderId\r\n            username: $username\r\n            senderUsername: $senderUsername\r\n            accepted: $accepted\r\n        ){\r\n            _id\r\n            receivedMashmateRequests{\r\n                senderId\r\n                username\r\n                timeSent\r\n                seen\r\n            }\r\n            mashmates{\r\n                id\r\n                username\r\n            }\r\n    }\r\n}`;\r\n\r\nexport const follow = gql`\r\nmutation followUser(\r\n    $id: String!,\r\n    $idToFollow: String!\r\n    ){\r\n        followUser(\r\n        id: $id\r\n        idToFollow: $idToFollow\r\n        ){\r\n        _id\r\n        following\r\n    }\r\n}`\r\n\r\nexport const incFollowersCount = gql`\r\nmutation incNumFollowers(\r\n    $id: String!,\r\n    ){\r\n        incNumFollowers(\r\n        id: $id\r\n        ){\r\n        _id\r\n        numFollowers\r\n    }\r\n}`\r\n\r\nexport const unfollow = gql`\r\nmutation unfollowUser(\r\n    $id: String!,\r\n    $idToUnfollow: String!\r\n    ){\r\n        unfollowUser(\r\n        id: $id\r\n        idToUnfollow: $idToUnfollow\r\n        ){\r\n        _id\r\n        following\r\n    }\r\n}`\r\n\r\nexport const decFollowersCount = gql`\r\nmutation decNumFollowers(\r\n    $id: String!,\r\n    ){\r\n        decNumFollowers(\r\n        id: $id\r\n        ){\r\n        _id\r\n        numFollowers\r\n    }\r\n}`\r\n\r\nexport const removeMashmate = gql`\r\nmutation removeMashmate(\r\n    $id: String!,\r\n    $mashmateId: String!,\r\n    $username: String!,\r\n    $mashmateUsername: String!\r\n    ){\r\n        removeMashmate(\r\n            id: $id\r\n            mashmateId: $mashmateId\r\n            username: $username\r\n            mashmateUsername: $mashmateUsername\r\n        ){\r\n            _id\r\n            mashmates{\r\n                id\r\n                username\r\n            }\r\n    }\r\n}`;\r\n\r\nexport const updateGenrePreferences = gql`\r\nmutation updateGenrePrefs($id: String!, $genrePreferences: [genrePreferencesInput]!){\r\n    updateGenrePreferences(id: $id, genrePreferences: $genrePreferences){\r\n        _id\r\n        genrePreferences{\r\n            genre\r\n            val\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nexport const addUser = gql`\r\nmutation addUser(\r\n    $username: String!\r\n    $email: String!\r\n    $bio: String!\r\n){\r\n    addUser(\r\n        username: $username\r\n        email: $email\r\n        bio: $bio\r\n    ){\r\n        _id\r\n        username\r\n    }\r\n}\r\n`","import React from \"react\";\r\nimport {Modal} from \"react-bootstrap\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst DeactivateAccountModal = (props) => {\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n        <Button variant=\"primary\" className=\"mm-btn-warning\" onClick={handleShow}>Deactivate Account</Button>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Confirm Account Deactivation</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"add-collaborator-body\">\r\n                <h2>Are you sure you would like to deactivate your Mix n' Mash account?</h2> \r\n                <h3>(Your account can be reactivated at any time by logging in)</h3>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button className=\"mm-btn-warning\" onClick={handleClose}>Cancel</Button>\r\n                <Button className=\"mm-btn\" onClick={props.deactivateCallback}> Deactivate Account </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </>)\r\n}\r\n\r\nexport default DeactivateAccountModal;","import React from \"react\";\r\nimport { Button, FormControl } from \"react-bootstrap\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { NavbarLinks } from \"../../data/NavbarLinks\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport IconButton from \"../../components/IconButton/IconButton\";\r\nimport MashmateCard from \"../../components/MashmateCard/MashmateCard\";\r\nimport MashmateRequestCard from \"../../components/MashmateRequestCard/MashmateRequestCard\";\r\nimport { useAuth } from \"../../utils/use-auth\";\r\nimport { useToast } from \"../../utils/use-toast\";\r\nimport ChangePassword from \"./Components/ChangePassword\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport {userClient, updateBio as updateBioMut, deactivateAccount as deactivateAccountMut, resolveMashmateRequest as resolveMMRequest, removeMashmate as removeMMMut} from \"../../services/userService\";\r\nimport {mixtapesClient, getUserMixtapes, updateOwnerActive as updateOwnerActiveMut} from \"../../services/mixtapesService\";\r\n\r\nimport DeactivateAccountModal from \"../../components/Modals/DeactivateAccountModal\";\r\n\r\nimport \"./AccountStyle.css\";\r\n\r\nexport default function Account(){\r\n  // Hook into the auth state\r\n  const auth = useAuth();\r\n\r\n  const toaster = useToast();\r\n\r\n  const {loading, data} = useQuery(getUserMixtapes, {client: mixtapesClient, variables:{userId: auth.user._id}});\r\n\r\n  const [updateOwnerActiveMutation] = useMutation(updateOwnerActiveMut, {client: mixtapesClient});\r\n\r\n  const [editingBio, setEditingBio] = React.useState(false);\r\n  const [tempBio, setTempBio] = React.useState(auth.user.bio);\r\n\r\n  const [updateBioMutation] = useMutation(updateBioMut, {client: userClient, onCompleted: ()=>{auth.getUser();}});\r\n  const [deactivateAccountMutation] = useMutation(deactivateAccountMut, {client: userClient});\r\n  const [resolveMMRequestMut] = useMutation(resolveMMRequest, {client: userClient, onCompleted: () => auth.getUser()});\r\n  const [removeMMMutation] = useMutation(removeMMMut, {client: userClient, onCompleted: () => auth.getUser()});\r\n\r\n\r\n  const updateBio = () => {\r\n    // Bio is different\r\n    if(tempBio !== auth.user.bio){\r\n      updateBioMutation({variables: {id: auth.user._id, bio: tempBio}});\r\n    }\r\n    setEditingBio(false);\r\n  }\r\n\r\n  const cancelUpdateBio = () => {\r\n    setTempBio(auth.user.bio);\r\n    setEditingBio(false);\r\n  }\r\n\r\n  const refreshUser = () => {\r\n    auth.getUser();\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  const logOut = () => {\r\n    auth.logout().then(success => {\r\n      if(success !== false){\r\n        toaster.notify(\"Log Out\", \"You have been successfully logged out.\");\r\n        history.push(\"/\");\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  const resolveMMR = (id, username, accepted) => {\r\n    resolveMMRequestMut({variables: {id: auth.user._id, username: auth.user.username, senderId: id, senderUsername: username, accepted: accepted}});\r\n  }\r\n\r\n  const removeMM = (id, username) => {\r\n    removeMMMutation({variables: {id: auth.user._id, username: auth.user.username, mashmateId: id, mashmateUsername: username}});\r\n  }\r\n\r\n  const updateMixtapesOwnerActive = () => {\r\n    data.getUserMixtapes.filter((mixtape) => mixtape.ownerId === auth.user._id)\r\n    .forEach((mixtape)=>{updateOwnerActiveMutation({variables: {id: mixtape._id, ownerActive: false}})});\r\n  }\r\n\r\n  const deactivateAccount = () => {\r\n    if(!loading){\r\n      deactivateAccountMutation({variables: {id: auth.user._id}});\r\n      updateMixtapesOwnerActive();\r\n      auth.logout().then(success => {\r\n        if(success !== false){\r\n          toaster.notify(\"Account Deactivated\", \"Account successfully deactivated. We have to see you go :(\");\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mm-container scroll-screen\">\r\n      <Navbar currentPage={NavbarLinks.ACCOUNT} />\r\n      <h1 className=\"page-title\">Account<Button className=\"mm-btn-warning\" onClick={logOut}>Log Out</Button></h1>\r\n      <div className=\"account-container\">\r\n        <div className=\"username\">{auth.user.username}</div>\r\n        <h4 className=\"followers\">{auth.user.numFollowers} Follower{auth.user.numFollowers !== 1 ? \"s\" : \"\"}</h4>\r\n        {/* BIO STUFF */}\r\n        <h3 style={{paddingLeft: \"4vw\", paddingTop: \"4vh\"}}>Edit Bio:</h3>\r\n        <div className=\"user-bio-container\">\r\n          <div className=\"edit-bio-buttons\">\r\n            {!editingBio && (\r\n              <IconButton\r\n                component={<EditIcon />}\r\n                callback={() => setEditingBio(true)}\r\n              />\r\n            )}\r\n            {editingBio && (\r\n              <IconButton\r\n                component={<SaveIcon />}\r\n                callback={updateBio}\r\n              />\r\n            )}\r\n            {editingBio && (\r\n              <IconButton\r\n                component={<NotInterestedIcon />}\r\n                callback={() => cancelUpdateBio()}\r\n              />\r\n            )}\r\n        </div>\r\n        <FormControl\r\n          as=\"textarea\"\r\n          className=\"user-bio\"\r\n          value={tempBio}\r\n          disabled={!editingBio}\r\n          maxLength=\"255\"\r\n          onChange={event => setTempBio(event.target.value)}\r\n        />\r\n        </div>\r\n        {/* PASSWORD STUFF */}\r\n        <h3 style={{paddingLeft: \"4vw\"}}>Change Password:</h3>\r\n        <div className=\"password-container\">\r\n          <ChangePassword />\r\n        </div>\r\n        {/* MASHMATE STUFF */}\r\n        <h3 style={{paddingLeft: \"4vw\", paddingTop: \"4vh\"}}>Mashmates:</h3>\r\n        <div className=\"mashmate-info-container\">\r\n          <div className=\"mashmates\">\r\n            Mashmates\r\n            <IconButton component={<RefreshIcon />} callback={() => refreshUser()} />\r\n            <div className=\"scroll-content\" style={{maxHeight: \"275px\"}}>\r\n              {auth.user.mashmates.map((mashmate, index) => (\r\n                <MashmateCard \r\n                  mashmate={mashmate} \r\n                  key={mashmate.id}\r\n                  index={index}\r\n                  remove={removeMM} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"mashmate-requests\">\r\n            Mashmate Requests\r\n            <IconButton component={<RefreshIcon />} callback={() => refreshUser()} />\r\n            <div className=\"scroll-content\" style={{maxHeight: \"275px\"}}>\r\n              {auth.user.receivedMashmateRequests.map((mashmateRequest, index) => (\r\n                <MashmateRequestCard\r\n                  mashmateRequest={mashmateRequest}\r\n                  key={mashmateRequest.senderId}\r\n                  index={index}\r\n                  resolve={resolveMMR} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* ACCOUNT STUFF */}\r\n        <h3 style={{paddingLeft: \"4vw\", paddingTop: \"4vh\"}}>Deactivate Account:</h3>\r\n        <div style={{paddingLeft: \"6vw\", paddingBottom: \"10vh\"}}>\r\n        <DeactivateAccountModal deactivateCallback={deactivateAccount} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ArrowUpwardSharpIcon from \"@material-ui/icons/ArrowUpwardSharp\"\r\nimport ArrowDownwardSharpIcon from\"@material-ui/icons/ArrowDownwardSharp\"\r\n\r\nimport IconButton from \"../IconButton/IconButton\";\r\n\r\nimport \"./SongCardStyle.css\";\r\n\r\nconst SongCard = (props) => {\r\n \r\n  return (\r\n    <Card key={props.song.name} className={\"song-card mm-card\" + (props.index%2 === 0 ? \" even\" : \" odd\")}>\r\n      {!props.editingSongs && <div>{(props.songIndex + 1) + \":\"}</div>}\r\n      <div>\r\n        <img src={\"https://img.youtube.com/vi/\"+props.song.youtubeId+\"/0.jpg\"} alt=\"\" className=\"thumbnail-image\"/> \r\n      </div>\r\n      \r\n      <div className=\"song-title\">\r\n        {props.song.name}\r\n      </div>\r\n\r\n      <div style={{display:\"inline-flex\", flexDirection:\"row\", justifyContent:\"flex-end\", alignItems:\"center\", inlineSize:\"6rem\"}}>\r\n        {props.editingSongs ? <IconButton \r\n              component={<ArrowUpwardSharpIcon /> } \r\n              callback = {() => props.moveSongEarlierCallback()}\r\n            > </IconButton> : <div></div> }\r\n        {props.editingSongs ? <IconButton \r\n              component={<ArrowDownwardSharpIcon /> } \r\n              callback = {() => props.moveSongLaterCallback()}\r\n        > </IconButton> : <div></div> }\r\n        {props.editingSongs ? <IconButton \r\n              component={<CancelIcon /> } \r\n              callback = {() => props.removeCallback()}\r\n            > </IconButton> : <div></div> }\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SongCard;","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nimport IconButton from \"../IconButton/IconButton\";\r\n\r\nimport \"./AddSongCardStyle.css\";\r\n\r\nconst AddSongCard = (props) => {\r\n  return (\r\n    <Card className=\"add-song-card mm-card\" key={props.song.name}>\r\n      <img src={\"https://img.youtube.com/vi/\"+props.song.youtubeId+\"/0.jpg\"} alt=\"\" className=\"thumbnail-image\"/>\r\n      <div className={props.previewCallback ? \"previewable\" : \"\"} onClick={() => props.previewCallback ? props.previewCallback(props.song.youtubeId) : null}>{props.song.name}</div>\r\n      <IconButton component={props.remove ? <ClearIcon/> : <AddIcon />} callback={props.addCallback} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddSongCard;","export async function searchSongs(searchTerm, pageToken){\r\n    let url = \"http://localhost:3000/youtube?term=\" + searchTerm;\r\n\r\n    if(pageToken){\r\n        url += \"&pageToken=\" + pageToken;\r\n    }\r\n\r\n    const rawResponse = fetch(url, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\"\r\n        }\r\n    });\r\n\r\n    const response = await rawResponse;\r\n\r\n    // TODO - Error checking\r\n    return response.json();\r\n}","import React from \"react\";\r\nimport { Button, Modal, Form, FormControl } from \"react-bootstrap\";\r\nimport AddSongCard from \"../../components/AddSongCard/AddSongCard\";\r\nimport { searchSongs } from \"../../services/youtubeService\";\r\nimport IconButton from \"../IconButton/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport YouTube from \"react-youtube\";\r\nimport { useToast } from \"../../utils/use-toast\";\r\n\r\nimport \"./ModalStyle.css\";\r\nimport \"../../pages/Page.css\";\r\n\r\n\r\nconst AddSongModal = (props) => {\r\n    const [show, setShow] = React.useState(false);\r\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n    const [results, setResults] = React.useState({songs: []});\r\n    const [addList, setAddList] = React.useState([]);\r\n    const [previewId, setPreviewId] = React.useState(\"\");\r\n    const toaster = useToast();\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [songLength, updateSongLength] = React.useState(0);\r\n\r\n    \r\n    const handleSearch = async (event) => {\r\n        // Prevent reload on pressing enter\r\n        event.preventDefault();\r\n\r\n        // Get results for song search\r\n        let result = await searchSongs(searchTerm);\r\n        setResults(result);\r\n    }\r\n\r\n    const addSong = (index) => {\r\n        let song = results.songs[index];\r\n        setAddList([...addList, song]);\r\n        updateSongLength(songLength + 1);\r\n    }\r\n\r\n    const removeSong = (index) => {\r\n        setAddList(addList.filter((_, i) => i !== index));\r\n        updateSongLength(songLength - 1);\r\n    }\r\n\r\n    const confirmAddSongs = () => {\r\n        if((songLength + props.originalSongLength) > 100){\r\n            toaster.notify(\"Total Songs are over 100! Cannot Merge!\");\r\n        }\r\n        else{\r\n            handleClose();\r\n            setResults({songs: []});\r\n            props.addSongsCallback(addList);\r\n            setAddList([]);\r\n            setPreviewId(\"\");\r\n            updateSongLength(0);\r\n        } \r\n    }\r\n\r\n    const cancelAddSongs = () => {\r\n        handleClose();\r\n        setResults({songs: []});\r\n        setAddList([]);\r\n        setPreviewId(\"\");\r\n        updateSongLength(0);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <IconButton variant=\"primary\" onClick={handleShow} disabled={props.disabledButton} component={<AddIcon/>}></IconButton>\r\n\r\n        <Modal show={show} onHide={cancelAddSongs}>\r\n            <Modal.Header closeButton className=\"add-song-modal-header\">\r\n                <Modal.Title>Add Song</Modal.Title>\r\n                <div className=\"search-bar\">\r\n                    <IconButton component={<SearchIcon />} callback={handleSearch}/>\r\n                    <Form inline onSubmit={handleSearch}>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            className=\"modal-search-bar\"\r\n                            onChange={(event) => setSearchTerm(event.target.value)}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"add-song-modal-body\">\r\n                <div className=\"add-song-content\">\r\n                    <div className=\"song-preview\">\r\n                        <YouTube videoId={previewId} opts = {{height: '100%', width: '100%'}}/>\r\n                    </div>\r\n                    <div className=\"search-results scroll-content\">\r\n                        {results.songs.map((song, index) => <AddSongCard song={song} key={index} addCallback={() => addSong(index)} previewCallback={(id) => setPreviewId(id)}/>)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"confirm-add-song\">\r\n                    <div style={{height: \"100%\"}}>\r\n                        <h5>Songs to Add:</h5>\r\n                        <div className=\"confirm-add-song-list scroll-content\">\r\n                            {addList.map((song, index) => <AddSongCard song={song} key={index} remove={true} addCallback={() => removeSong(index)} />)}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Button className=\"mm-btn\" style={{marginRight: \"2vw\"}} onClick={confirmAddSongs}>Add Songs</Button>\r\n                        <Button className=\"mm-btn-warning\" onClick={cancelAddSongs}>Cancel</Button>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>)\r\n}\r\n\r\nexport default AddSongModal;","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport CustomDropdown from \"../../Dropdown/Dropdown\";\r\nimport IconButton from \"../../IconButton/IconButton\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nimport \"./ModalComponentStyle.css\";\r\n\r\nconst EditPermissionsCard = (props) => {\r\n\r\n\r\n    return (\r\n        <Card className=\"edit-permissions-card\">\r\n            <div>{props.collaboratorObj.username}</div>\r\n            <div>\r\n                <CustomDropdown items={[\"Can View\", \"Can Edit\"]} defaultIndex={props.collaboratorObj.privilegeLevel===\"view\" ? 0 : 1} selectionCallback={(selection) => props.updatePrivilegeLevel(selection)}/>\r\n                <IconButton component={<CancelIcon/>} callback={props.removeCollaborator}/>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default EditPermissionsCard;","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport IconButton from \"../../IconButton/IconButton\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport \"./ModalComponentStyle.css\";\r\n\r\nconst AddCollaboratorCard = (props) => {\r\n\r\n\r\n    return (\r\n        <Card className=\"edit-permissions-card\">\r\n            <div>{props.mashmateObj.username}</div>\r\n            <IconButton component={<AddIcon/>} callback={props.addCollaborator}/>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default AddCollaboratorCard;","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport EditPermissionsCard from \"./Components/EditPermissionsCard\";\r\nimport AddCollaboratorCard from \"./Components/AddCollaboratorCard\";\r\nimport IconButton from \"../../components/IconButton/IconButton\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport \"./ModalStyle.css\";\r\nimport \"../../pages/Page.css\";\r\nimport { useAuth } from \"../../utils/use-auth\";\r\nimport { mixtapesClient } from \"../../services/mixtapesService\";\r\nimport { updateCollaborators as updateCollaboratorsMut } from \"../../services/mixtapesService\";\r\n\r\n\r\nconst AddCollaboratorModal = (props) => {\r\n    const auth = useAuth();\r\n    const user = auth.user;\r\n\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    const [collaborators, setCollaborators] = React.useState(props.mixtape.collaborators)\r\n    const mashmates = user.mashmates;\r\n    const mashmatesNotCollaborators = mashmates.filter(m => !collaborators.reduce((acc, c) => (c.userId === m.id) || acc, false));\r\n\r\n    const [updateCollaboratorsMutation] = useMutation(updateCollaboratorsMut, {client: mixtapesClient});\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const removeCollaborator = (collaborator) => {\r\n        let tempCollaborators = collaborators.filter(c => c.userId!==collaborator.userId).map(c => ({userId: c.userId, username: c.username, privilegeLevel: c.privilegeLevel}));\r\n        updateCollaboratorsMutation({variables:{id: props.mixtape._id, collaborators: tempCollaborators}});\r\n        setCollaborators(tempCollaborators);\r\n    }\r\n\r\n    const addCollaborator = (mashmate) => {\r\n        let tempCollaborators = collaborators.map(c => ({userId: c.userId, username: c.username, privilegeLevel: c.privilegeLevel}));\r\n        let newCollaborator = {userId: mashmate.id, username: mashmate.username, privilegeLevel: \"view\"};\r\n        tempCollaborators.push(newCollaborator);\r\n        updateCollaboratorsMutation({variables:{id: props.mixtape._id, collaborators: tempCollaborators}});\r\n        setCollaborators(tempCollaborators);\r\n    }\r\n\r\n    const updatePrivilegeLevel = (privilegeLevelStr, collaborator) => {\r\n        let tempCollaborators = collaborators.map(c => \r\n            {if (c.userId === collaborator.userId){\r\n                return ({userId: c.userId, username: c.username, privilegeLevel: privilegeLevelStr===\"Can View\" ? \"view\" : \"edit\"});\r\n            } else {\r\n                return ({userId: c.userId, username: c.username, privilegeLevel: c.privilegeLevel});\r\n            }}\r\n        );\r\n        updateCollaboratorsMutation({variables: {id: props.mixtape._id, collaborators: tempCollaborators}});\r\n        setCollaborators(tempCollaborators);\r\n    }\r\n        \r\n\r\n\r\n    return (\r\n        <>\r\n        <IconButton component={<GroupAddIcon />} onClick={handleShow} />\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Sharing Privileges</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"add-collaborator-body\">\r\n                <div className=\"height50\">\r\n                    <h5>Edit Permissions</h5>\r\n                    <div className=\"scroll-content height80\">\r\n                        {collaborators.map(collaborator => (<EditPermissionsCard key={collaborator.userId} collaboratorObj={collaborator} removeCollaborator={()=>{removeCollaborator(collaborator);}} updatePrivilegeLevel={(selection) => updatePrivilegeLevel(selection, collaborator)}/>))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"height50\">\r\n                    <h5>Add Collaborator</h5>\r\n                    <div className=\"scroll-content height80\">\r\n                        {mashmatesNotCollaborators.map(mashmate => (<AddCollaboratorCard key={mashmate.id} mashmateObj={mashmate} addCollaborator={()=>{addCollaborator(mashmate);}}/>))}\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>)\r\n}\r\n\r\nexport default AddCollaboratorModal;","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport IconButton from \"../../IconButton/IconButton\";\r\nimport CallMergeIcon from \"@material-ui/icons/CallMerge\";\r\n\r\nimport \"./ModalComponentStyle.css\";\r\n\r\nconst MashMixtapeCard = (props) => {\r\n    return (\r\n        <Card className=\"edit-permissions-card\">\r\n            <div>{props.mixtape.title}</div>\r\n            <IconButton component={<CallMergeIcon/>} onClick={props.mergeMixtape}/>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default MashMixtapeCard;","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport CallMergeIcon from \"@material-ui/icons/CallMerge\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\n\r\nimport { mixtapesClient, getUserMixtapes, mashMixtape as mashMixtapeMut } from \"../../services/mixtapesService\";\r\nimport IconButton from \"../IconButton/IconButton\";\r\nimport MashMixtapeCard from \"./Components/MashMixtapeCard\";\r\nimport { useAuth } from \"../../utils/use-auth\";\r\nimport { useToast } from \"../../utils/use-toast\";\r\n\r\nimport \"../../pages/Page.css\";\r\n\r\nconst MashMixtapeModal = (props) => {\r\n    // Hook into the auth state\r\n    const auth = useAuth();\r\n\r\n    // Hook into notifications\r\n    const toaster = useToast();\r\n\r\n    const [show, setShow] = React.useState(false);\r\n\r\n    // Get list of mixtapes from user\r\n    const {loading, data} = useQuery(getUserMixtapes, {client: mixtapesClient, variables: {userId: auth.user._id}});\r\n    const [mashMixtape] = useMutation(mashMixtapeMut, {client: mixtapesClient, onCompleted: (data) => {\r\n        // Notify the user a mixtape was created\r\n        toaster.notify(\"Mixtape Mashed\", <>You just mashed a mixtape!</>);\r\n    }});\r\n\r\n    const mergeMixtape = (mixtape) => {\r\n        if((mixtape.songs.length + props.mixtape.songs.length) > 100){\r\n            toaster.alert(\"Mixtapes too large\",\"Total Songs are over 100 - Cannot Merge!\");\r\n        }\r\n        else{\r\n            let songs = [];\r\n\r\n            let i = 0;\r\n            let j = 0;\r\n    \r\n            while(i < mixtape.songs.length && j < props.mixtape.songs.length){\r\n                let choice = Math.random();\r\n    \r\n                if(choice < 0.5){\r\n                    songs.push(mixtape.songs[i]);\r\n                    i++;\r\n                } else {\r\n                    songs.push(props.mixtape.songs[j]);\r\n                    j++;\r\n                }\r\n            }\r\n    \r\n            while(i < mixtape.songs.length || j < props.mixtape.songs.length){\r\n                if(i < mixtape.songs.length){\r\n                    songs.push(mixtape.songs[i]);\r\n                    i++;\r\n                } else {\r\n                    songs.push(props.mixtape.songs[j]);\r\n                    j++;\r\n                }\r\n            }\r\n    \r\n            let genres = [...mixtape.genres];\r\n    \r\n            for(let genre of props.mixtape.genres){\r\n                if(!genres.includes(genre)){\r\n                    genres.push(genre);\r\n                }\r\n            }\r\n    \r\n            let reqObj = {\r\n                id: mixtape._id,\r\n                title: mixtape.title + \" X \" + props.mixtape.title,\r\n                songs: songs.map(song => ({name: song.name, youtubeId: song.youtubeId})),\r\n                genres: genres\r\n            }\r\n    \r\n            mashMixtape({variables: reqObj});\r\n            setShow(false);\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <IconButton component={<CallMergeIcon />} onClick={() => setShow(true)} />\r\n\r\n        <Modal show={show} onHide={() => setShow(false)}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Mash Mixtape</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className=\"mash-mixtape-body\">\r\n                <h5 style={{paddingBottom: \"2vh\"}}>Select a mixtape to merge this mixtape into:</h5>\r\n                {!loading && data.getUserMixtapes.filter(mixtape => mixtape.ownerId === auth.user._id).map(mixtape => (\r\n                    <MashMixtapeCard key={mixtape._id} mixtape={mixtape} mergeMixtape={() => mergeMixtape(mixtape)}></MashMixtapeCard>\r\n                ))}\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>);\r\n}\r\n\r\nexport default MashMixtapeModal;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nimport IconButton from \"../../components/IconButton/IconButton\"\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport { formatDate } from \"../../utils/DateUtils\";\r\n\r\nimport \"./CommentStyle.css\";\r\n\r\nconst Comment = (props) => {\r\n\r\n    const [replyText, setReplyText] = React.useState(\"\");\r\n\r\n    const submitReply = (event) => {\r\n        event.preventDefault();\r\n\r\n        props.submitReply(replyText);\r\n\r\n        setReplyText(\"\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"space-below\" style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n                <div>\r\n                    <Link to={\"/User/\" + props.comment.userId}>\r\n                        {props.comment.username}:{\" \"}\r\n                    </Link>\r\n                    {props.comment.content} \r\n                    <IconButton component={<ReplyIcon />} onClick={props.startReply} edge=\"end\"/>\r\n                </div>\r\n                <div style={{display:\"flex\", justifyContent:\"right\", alignItems:\"right\"}}>{formatDate(props.comment.publishingTime)}</div>\r\n            </div>\r\n            {props.replying && <Form onSubmit={submitReply}>\r\n                <Form.Control\r\n                type=\"input\"\r\n                value={replyText}\r\n                placeholder={\"Write your reply here...\"}\r\n                onChange={event => setReplyText(event.target.value)}\r\n                maxLength={250}\r\n                />\r\n            </Form>}\r\n            {props.comment.replies.map(reply =>\r\n            <div className=\"space-below reply\" key={reply.username + reply.content} style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n                <div><Link to={\"/User/\" + reply.userId}>{reply.username}:</Link> {reply.content}</div>\r\n                <div style={{display:\"flex\", justifyContent:\"right\", alignItems:\"right\"}}>{formatDate(reply.publishingTime)}</div>\r\n            </div>)}\r\n        </>);\r\n}\r\n\r\nexport default Comment;","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { mixtapesClient, getMixtape } from \"../services/mixtapesService\";\r\n\r\nconst pollingContext = React.createContext();\r\n\r\nexport function ProvidePolling({children}){\r\n    const polling = useProvidePolling();\r\n    return <pollingContext.Provider value={polling}>{children}</pollingContext.Provider>\r\n}\r\n\r\nexport const usePolling = () => {\r\n    return React.useContext(pollingContext);\r\n}\r\n\r\nfunction useProvidePolling(){\r\n\r\n    const [mixtapeId, setMixtapeId] = React.useState(\"0\");\r\n    \r\n    const queryObj = useQuery(getMixtape, {client: mixtapesClient, variables: {id: mixtapeId}, pollInterval: 1000, onCompleted: (data)=>{\r\n        setMixtapeId(data.mixtape._id);\r\n    }});\r\n\r\n    const startPolling = (newMixtapeId) => {\r\n        setMixtapeId(newMixtapeId);\r\n        queryObj.refetch({variables: {id: newMixtapeId}});\r\n    }\r\n\r\n    return {\r\n        data: queryObj.data,\r\n        mixtapeId,\r\n        loading: queryObj.loading || (queryObj.data === undefined || queryObj.data.mixtape === null),\r\n        startPolling\r\n    }\r\n\r\n\r\n\r\n}","import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CallSplitIcon from \"@material-ui/icons/CallSplit\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { useMutation } from \"@apollo/client\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport IconButton from \"../../components/IconButton/IconButton\";\r\nimport SongCard from \"../../components/SongCard/SongCard\";\r\nimport AddSongModal from \"../../components/Modals/AddSongModal\"\r\nimport AddCollaboratorModal from \"../../components/Modals/AddCollaboratorModal\"\r\nimport MashMixtapeModal from \"../../components/Modals/MashMixtapeModal\";\r\nimport Comment from \"../../components/Comments/Comment\";\r\nimport { mixtapesClient, \r\n  addSongs as addSongsMut,\r\n  editSongs as editSongsMut,\r\n  addComment as addCommentMut,\r\n  addReply as addReplyMut,\r\n  createMixtapeFromBase as createMixtapeFromBaseMut,\r\n  updateLikes as updateLikesMut,\r\n  updateDislikes as updateDislikesMut,\r\n  updateMixtapeTitle as updateMixtapeTitleMut,\r\n  updateMixtapeDescription as updateMixtapeDescriptionMut,\r\n  updateMixtapeGenres as updateMixtapeGenresMut,\r\n  updateMixtapePrivate as updateMixtapePrivateMut,\r\n  addListen\r\n  } from \"../../services/mixtapesService\"; \r\n\r\nimport {userClient, updateUserLikes as updateUserLikesMut, updateUserDislikes as updateUserDislikesMut } from \"../../services/userService\";\r\nimport { useAuth } from \"../../utils/use-auth\";\r\nimport { useToast } from \"../../utils/use-toast\";\r\nimport { usePolling } from \"../../utils/use-polling\";\r\n\r\nimport \"./MixtapePageStyle.css\";\r\n\r\nexport default function MixtapePage(){\r\n    // Extract the mixtape id from the url\r\n    let url = window.location.pathname.split(\"/\");\r\n    const id = url[url.length - 1];\r\n\r\n    // Hook into the auth object\r\n    const auth = useAuth();\r\n\r\n    // Hook into notifications\r\n    const toaster = useToast();\r\n\r\n    // Hook into polling\r\n    const polling = usePolling();\r\n    if (id !== polling.mixtapeId){\r\n        polling.startPolling(id);\r\n    }\r\n\r\n    /* ---------- HOOKS ---------- */\r\n    // Mixtape editing\r\n    const [editingMixtapeTitle, setEditingMixtapeTitle] = React.useState(false);\r\n    const [tempTitle, setTempTitle] = React.useState(null);\r\n\r\n    const [editingMixtapeDescription, setEditingMixtapeDescription] = React.useState(false);\r\n    const [tempDescription, setTempDescription] = React.useState(null);\r\n\r\n    const [editingSongs, setEditingSongs] = React.useState(false);\r\n    const [editList, setEditList] = React.useState([]);\r\n\r\n    // Song playing\r\n    const [currentSongIndex, setCurrentSongIndex] = React.useState(0);\r\n    const [autoplay, setAutoplay] = React.useState(0);\r\n\r\n    // Commenting\r\n    const [commentText, setCommentText] = React.useState(\"\");\r\n    const [replyIndex, setReplyIndex] = React.useState(-1);\r\n\r\n    const [requestPending, setRequestPending] = React.useState(false);\r\n\r\n    const [hasListened, setHasListened] = React.useState(false);\r\n\r\n    /* ---------- MUTATIONS ---------- */\r\n    const [addSongsMutation] = useMutation(addSongsMut, {client: mixtapesClient});\r\n    const [addCommentMutation] = useMutation(addCommentMut, {client: mixtapesClient});\r\n    const [addReplyMutation] = useMutation(addReplyMut, {client: mixtapesClient});\r\n    const [editSongsMutation] = useMutation(editSongsMut, {client: mixtapesClient});\r\n    const [createMixtapeFromBase] = useMutation(createMixtapeFromBaseMut, {client: mixtapesClient, onCompleted: (data) => {\r\n      // Notify the user a mixtape was created\r\n      toaster.notify(\"Mixtape Forked\", <>You just forked a mixtape!</>);\r\n    }});\r\n    const [updateLikesMutation] = useMutation(updateLikesMut, {client: mixtapesClient});\r\n    const [updateDislikesMutation] = useMutation(updateDislikesMut, {client: mixtapesClient});\r\n    const [updateMixtapeTitleMutation] = useMutation(updateMixtapeTitleMut, {client: mixtapesClient});\r\n    const [updateMixtapeDescriptionMutation] = useMutation(updateMixtapeDescriptionMut, {client: mixtapesClient});\r\n    const [updateMixtapeGenresMutation] = useMutation(updateMixtapeGenresMut, {client: mixtapesClient});\r\n    const [updateMixtapePrivateMutation] = useMutation(updateMixtapePrivateMut, {client: mixtapesClient});\r\n\r\n    const [updateUserLikesMutation] = useMutation(updateUserLikesMut, {client: userClient, onCompleted: (data) => {\r\n    auth.getUser({likedMixtapes: data.setLikeMixtape.likedMixtapes, dislikedMixtapes: data.setLikeMixtape.dislikedMixtapes});\r\n    setRequestPending(false);\r\n    }});\r\n\r\n    const [updateUserDislikesMutation] = useMutation(updateUserDislikesMut, {client: userClient, onCompleted: (data) => {\r\n    auth.getUser({likedMixtapes: data.setDislikeMixtape.likedMixtapes, dislikedMixtapes: data.setDislikeMixtape.dislikedMixtapes});\r\n    setRequestPending(false);\r\n    }});\r\n\r\n    const [addListenMutation] = useMutation(addListen, {client: mixtapesClient});\r\n\r\n    /* ---------- CALLBACKS ---------- */\r\n    // Callback for when we add songs to the backend\r\n    const addSongs = (songs) => {\r\n    addSongsMutation({variables: {id: id, songs: songs}});\r\n    }\r\n\r\n    // Callback for when we submit a comment\r\n    const submitComment = (event) => {\r\n    // Don't reload page\r\n    event.preventDefault();\r\n\r\n    // Add a comment to the backend (and update when it returns)\r\n    const comment = {\r\n        userId: auth.user._id,\r\n        username: auth.user.username,\r\n        content: commentText\r\n    };\r\n    addCommentMutation({variables: {id: polling.data.mixtape._id, comment: comment}});\r\n\r\n    // Remove comment text\r\n    setCommentText(\"\");\r\n    }\r\n\r\n    const submitReply = (commentId, replyText) => {\r\n        // Add a comment to the backend (and update when it returns)\r\n        const reply = {\r\n            userId: auth.user._id,\r\n            username: auth.user.username,\r\n            content: replyText\r\n        };\r\n\r\n        addReplyMutation({variables: {id: polling.data.mixtape._id, commentId: commentId, reply: reply}});\r\n    \r\n        // Remove comment text\r\n        setReplyIndex(-1);\r\n    }\r\n\r\n    // Callback for when the current song is done playing\r\n    const changeToNextSong = (event) => {\r\n        if(!polling.loading){\r\n            let index = (currentSongIndex + 1) % polling.data.mixtape.songs.length;\r\n\r\n            setCurrentSongIndex(index);\r\n\r\n            if(index !== 0){\r\n                setAutoplay(1);\r\n            } else {\r\n                setAutoplay(0);\r\n            }\r\n\r\n            // Player state won't update if we play the same song twice in a row. Handle this:\r\n            if(index !== 0 && polling.data.mixtape.songs[index].youtubeId === polling.data.mixtape.songs[index-1].youtubeId){\r\n                event.target.seekTo(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    //Adding a mixtape\r\n    const addMixtape = () => {\r\n    createMixtapeFromBase({variables: {\r\n        ownerId: auth.user._id, \r\n        ownerName: auth.user.username,\r\n        title: polling.data.mixtape.title, \r\n        description: polling.data.mixtape.description, \r\n        genres: polling.data.mixtape.genres, \r\n        image: polling.data.mixtape.image, \r\n        songs: polling.data.mixtape.songs.map(song =>({youtubeId: song.youtubeId, name: song.name}))\r\n      }});\r\n    }\r\n\r\n    const moveSongEarlier = (index) => {\r\n    if (!polling.loading){\r\n        if (index !== 0){\r\n        let tempSongsArr = editList.slice();\r\n        let tempSong = tempSongsArr[index];\r\n        tempSongsArr[index] = tempSongsArr[index-1];\r\n        tempSongsArr[index-1] = tempSong;\r\n        setEditList(tempSongsArr);\r\n        let list = editList.map (song => \r\n            (\r\n            {youtubeId: song.youtubeId,\r\n            name: song.name,\r\n            }\r\n            )\r\n        )\r\n        editSongsMutation({variables: {id: id, songs: list}});\r\n        }\r\n      }\r\n    }\r\n\r\n    const moveSongLater = (index) => {\r\n    if (!polling.loading){\r\n        if (index !== polling.data.mixtape.songs.length-1){\r\n        let tempSongsArr = editList.slice();\r\n        let tempSong = tempSongsArr[index];\r\n        tempSongsArr[index] = tempSongsArr[index+1];\r\n        tempSongsArr[index+1] = tempSong;\r\n        setEditList(tempSongsArr);\r\n        let list = editList.map (song => \r\n            (\r\n            {youtubeId: song.youtubeId,\r\n            name: song.name,\r\n            }\r\n            )\r\n        )\r\n        editSongsMutation({variables: {id: id, songs: list}});\r\n        }\r\n      }\r\n    }\r\n\r\n    const startEditingSongs = () =>{\r\n      setEditingSongs(true);\r\n      setEditList(polling.data.mixtape.songs.slice());\r\n    }\r\n\r\n    const updateSongs = () => {\r\n      let list = editList.map (song => ({youtubeId: song.youtubeId, name: song.name})); \r\n              \r\n      editSongsMutation({variables: {id: id, songs: list}});\r\n      setEditList([]);\r\n      setEditingSongs(false);\r\n    }\r\n\r\n    const cancelEditingSongs = () => {\r\n      setEditingSongs(false);\r\n    }\r\n\r\n    const removeSong = (index) => {\r\n      let list = editList.filter((song, i) => i !== index);\r\n      setEditList(list);\r\n    }\r\n    const userCanEdit = () => {\r\n      if (!polling.loading){\r\n          if (polling.data.mixtape.ownerId === auth.user._id){ return true; }\r\n          if (polling.data.mixtape.collaborators.reduce((acc, x) => (x.userId === auth.user._id && x.privilegeLevel === \"edit\") || acc, false)){ return true; }\r\n          return false;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const incrementLikes = () => {\r\n      if (!polling.loading){\r\n          if (!requestPending){\r\n          setRequestPending(true);\r\n          let wasDisliked = false;\r\n          if (auth.user.dislikedMixtapes.includes(id)){\r\n            updateDislikesMutation({variables: {id: id, incAmount: -1}});\r\n            wasDisliked = true;\r\n          }\r\n          if (auth.user.likedMixtapes.includes(id)){\r\n            updateLikesMutation({variables: {id: id, userId: auth.user._id, incAmount: -1}});\r\n            updateUserLikesMutation({variables: {id: auth.user._id, mixtapeId: id, mixtapeGenres: polling.data.mixtape.genres, genrePreferences: auth.user.genrePreferences.map(x => ({genre: x.genre, val: x.val})), like: false, wasDisliked}});\r\n          }\r\n          else{\r\n            updateLikesMutation({variables:{id: id, userId: auth.user._id, incAmount: 1}});\r\n            updateUserLikesMutation({variables: {id: auth.user._id, mixtapeId: id, mixtapeGenres: polling.data.mixtape.genres, genrePreferences: auth.user.genrePreferences.map(x => ({genre: x.genre, val: x.val})), like: true, wasDisliked}});\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const incrementDislikes = () => {\r\n      if (!polling.loading){\r\n          if (!requestPending){\r\n          setRequestPending(true);\r\n          let wasLiked = false;\r\n          if (auth.user.likedMixtapes.includes(id)){\r\n            updateLikesMutation({variables: {id: id, userId: auth.user._id, incAmount: -1}});\r\n            wasLiked = true;\r\n          }\r\n          if (auth.user.dislikedMixtapes.includes(id)){\r\n            updateDislikesMutation({variables: {id: id, incAmount: -1}});\r\n            updateUserDislikesMutation({variables: {id: auth.user._id, mixtapeId: id, mixtapeGenres: polling.data.mixtape.genres, genrePreferences: auth.user.genrePreferences.map(x => ({genre: x.genre, val: x.val})), dislike: false, wasLiked}});\r\n          }\r\n          else{\r\n            updateDislikesMutation({variables:{id: id, incAmount: 1}});\r\n            updateUserDislikesMutation({variables: {id: auth.user._id, mixtapeId: id, mixtapeGenres: polling.data.mixtape.genres, genrePreferences: auth.user.genrePreferences.map(x => ({genre: x.genre, val: x.val})), dislike: true, wasLiked}});\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const handleListen = () => {\r\n      if(!hasListened){\r\n          addListenMutation({variables: {id: id, userId: auth.user._id}});\r\n          setHasListened(true);\r\n      }\r\n    }\r\n\r\n    const genres=[\r\n    {value: \"Alternative Rock\"},\r\n    {value: \"Ambient\"},\r\n    {value: \"Blues\"},\r\n    {value: \"Chill\"},\r\n    {value: \"Classical\"},\r\n    {value: \"Country\"},\r\n    {value: \"Drum and Bass\"},\r\n    {value: \"Dubstep\"},\r\n    {value: \"Electronic\"},\r\n    {value: \"Folk\"},\r\n    {value: \"Hip Hop\"},\r\n    {value: \"House\"},\r\n    {value: \"Indie\"},\r\n    {value: \"Instrumental\"},\r\n    {value: \"Jazz\"},\r\n    {value: \"LoFi\"},\r\n    {value: \"Metal\"},\r\n    {value: \"Musical Theatre\"}, \r\n    {value: \"New Wave\"},\r\n    {value: \"Other\"},\r\n    {value: \"Pop\"},\r\n    {value: \"Reggae\"},\r\n    {value: \"Rock\"}, \r\n    {value: \"Ska\"},\r\n    {value: \"Soundtrack\"},\r\n    {value: \"Swing\"}\r\n    ];\r\n    const [options] = React.useState(genres);\r\n\r\n    const updateTitle = () => {\r\n        setEditingMixtapeTitle(false);\r\n        \r\n        // Don't update unless the description is different\r\n        if(tempTitle !== null && tempTitle !== polling.data.mixtape.title){\r\n            updateMixtapeTitleMutation({variables: {id: polling.data.mixtape._id, title: tempTitle}});\r\n        }\r\n        setTempTitle(null);\r\n    }\r\n\r\n    const cancelUpdateTitle = () => {\r\n        setEditingMixtapeTitle(false);\r\n        setTempTitle(null);\r\n    }\r\n\r\n    const updateDescription = () => {\r\n        setEditingMixtapeDescription(false);\r\n\r\n        // Don't update unless the description is different\r\n        if(tempDescription !== null && tempDescription !== polling.data.mixtape.description){\r\n            updateMixtapeDescriptionMutation({variables: {id: polling.data.mixtape._id, description: tempDescription}});\r\n        }\r\n        setTempDescription(null);\r\n    }\r\n\r\n    const cancelUpdateDescription = () => {\r\n        setEditingMixtapeDescription(false);\r\n        setTempDescription(null);\r\n    }\r\n\r\n    const updateMixtapePrivate = () => {\r\n      if(!polling.loading){\r\n        updateMixtapePrivateMutation({variables: {id: polling.data.mixtape._id, private: !polling.data.mixtape.private}});\r\n      }\r\n    }\r\n\r\n    const addGenre = (selectedList, selectedItem) => {\r\n        var tempList = [];\r\n        for(var i = 0; i < selectedList.length; i++){\r\n            tempList.push(selectedList[i].value);\r\n        }\r\n\r\n        updateMixtapeGenresMutation({variables: {id: polling.data.mixtape._id, genres: tempList}});\r\n        editPreSelected(tempList);\r\n        tempList = [];\r\n    }\r\n\r\n    const removeGenre = (selectedList, selectedItem) => {\r\n    var tempList = [];\r\n    for(var i = 0; i < selectedList.length; i++){\r\n        tempList.push(selectedList[i].value);\r\n    }\r\n\r\n    updateMixtapeGenresMutation({variables: {id: polling.data.mixtape._id, genres: tempList}});\r\n    editPreSelected(tempList);\r\n    tempList = [];\r\n    }\r\n\r\n    function editPreSelected (selectedList) {\r\n    var tempPreSelected = []\r\n    for(var i = 0; i < selectedList.length; i++){\r\n        tempPreSelected.push({value: selectedList[i]});\r\n    }\r\n    preSelected = tempPreSelected;\r\n    }\r\n\r\n    var preSelected = [];\r\n    if(!polling.loading){\r\n        editPreSelected(polling.data.mixtape.genres)\r\n    }\r\n    \r\n    return(\r\n      <div className=\"mm-container scroll-screen\">\r\n      <Navbar currentPage={null} />\r\n      <div className=\"mixtape-container\">\r\n      <div className=\"mixtape-header\">\r\n          {userCanEdit() && <Form.Group controlId=\"formBasicCheckbox\" style={{display: \"flex\", flexDirection: \"row\"}}>\r\n            <Form.Check type=\"checkbox\" checked={polling.loading ? false : polling.data.mixtape.private} onChange={updateMixtapePrivate}/>\r\n            <Form.Label style={{paddingLeft: \"1vw\"}}>Private</Form.Label>\r\n          </Form.Group>}\r\n          {!userCanEdit() && <div>{\" \"}</div>}\r\n          <div>\r\n          <MashMixtapeModal mixtape={!polling.loading ? polling.data.mixtape : null} />\r\n          <IconButton component={<CallSplitIcon onClick={addMixtape}/>} />\r\n          {(!polling.loading && auth.user._id === polling.data.mixtape.ownerId) &&\r\n            <AddCollaboratorModal mixtape={!polling.loading ? polling.data.mixtape : null}/>\r\n          }\r\n          </div>\r\n        </div>\r\n        <div className=\"title\">\r\n            {!userCanEdit() && !polling.loading && polling.data.mixtape.title}\r\n            {userCanEdit() && <div className=\"title-buttons\">\r\n            {!editingMixtapeTitle && (\r\n              <IconButton\r\n                component={<EditIcon />}\r\n                callback={() => setEditingMixtapeTitle(true)}\r\n              />\r\n            )}\r\n            {editingMixtapeTitle && (\r\n              <IconButton\r\n                component={<SaveIcon />}\r\n                callback={updateTitle}\r\n              />\r\n            )}\r\n            {editingMixtapeTitle && (\r\n              <IconButton\r\n                component={<NotInterestedIcon />}\r\n                callback={cancelUpdateTitle}\r\n              />\r\n            )}\r\n            </div>}\r\n            {userCanEdit() && <Form.Control\r\n                as=\"input\"\r\n                className=\"title-input\"\r\n                value={tempTitle !== null ? tempTitle : (!polling.loading && polling.data.mixtape.title)}\r\n                disabled={!editingMixtapeTitle}\r\n                maxLength=\"50\"\r\n                onChange={event => setTempTitle(event.target.value)}\r\n            />}\r\n        </div>\r\n        <h5 className=\"owner\">Mixed By: <Link className=\"mm-link-pink\" to={\"/User/\" + (!polling.loading && polling.data.mixtape.ownerId)}>{!polling.loading && polling.data.mixtape.ownerName}</Link></h5>\r\n        {/* DESCRIPTION STUFF */}\r\n        <h3 style={{paddingLeft: \"4vw\", paddingTop: \"4vh\"}}>Description:</h3>\r\n        {!userCanEdit() && <div className=\"description-container\"><div style={{paddingLeft: \"4vw\"}}>{!polling.loading && polling.data.mixtape.description}</div></div>}\r\n        {userCanEdit() && <div className=\"description-container\">\r\n          <div className=\"description-buttons\">\r\n            {!editingMixtapeDescription && (\r\n              <IconButton\r\n                component={<EditIcon />}\r\n                callback={() => setEditingMixtapeDescription(true)}\r\n              />\r\n            )}\r\n            {editingMixtapeDescription && (\r\n              <IconButton\r\n                component={<SaveIcon />}\r\n                callback={updateDescription}\r\n              />\r\n            )}\r\n            {editingMixtapeDescription && (\r\n              <IconButton\r\n                component={<NotInterestedIcon />}\r\n                callback={cancelUpdateDescription}\r\n              />\r\n            )}\r\n        </div>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          className=\"description\"\r\n          value={tempDescription !== null ? tempDescription : (!polling.loading && polling.data.mixtape.description)}\r\n          disabled={!editingMixtapeDescription}\r\n          maxLength=\"255\"\r\n          onChange={event => setTempDescription(event.target.value)}\r\n        />\r\n        </div>}\r\n        {/* SONG STUFF */}\r\n        <h3 style={{paddingLeft: \"4vw\", paddingTop: \"4vh\"}}>Songs:</h3>\r\n        <div className=\"song-container\">\r\n          <div>\r\n            <div className=\"song-buttons\">\r\n              {userCanEdit() && !editingSongs && <IconButton component={<EditIcon />} callback={startEditingSongs}/>}\r\n              {userCanEdit() && !editingSongs && !polling.loading && <AddSongModal originalSongLength={polling.data.mixtape.songs.length} addSongsCallback={addSongs} disabledButton={editingSongs} />}\r\n              {userCanEdit() && editingSongs && <IconButton component={<SaveIcon />} callback={updateSongs}/>}\r\n              {userCanEdit() && editingSongs && <IconButton component={<NotInterestedIcon />} callback={cancelEditingSongs}/>}        \r\n            </div>\r\n            <div className=\"songs-list\">\r\n              {!polling.loading && !editingSongs && polling.data.mixtape.songs.map((song, index) => (\r\n                <SongCard song={song} key={index} index={index} songIndex={polling.data.mixtape.songs.indexOf(song)} editingSongs={editingSongs} removeCallback={() => removeSong(index)} moveSongEarlierCallback={() => moveSongEarlier(index)} moveSongLaterCallback={() => moveSongLater(index)}/>\r\n              ))}\r\n              {!polling.loading && editingSongs && editList.map((song, index) => (\r\n                <SongCard song={song} key={index} index={index} songIndex={polling.data.mixtape.songs.indexOf(song)} editingSongs={editingSongs} removeCallback={() => removeSong(index)} moveSongEarlierCallback={() => moveSongEarlier(index)} moveSongLaterCallback={() => moveSongLater(index)} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"video-display\">\r\n            {!polling.loading && polling.data.mixtape.songs.length > 0 &&\r\n              <YouTube className=\"video\"\r\n                onPlay={handleListen}\r\n                videoId={polling.data.mixtape.songs.length > 0 ? polling.data.mixtape.songs[currentSongIndex].youtubeId : \"\"}\r\n                onEnd={changeToNextSong} opts={{playerVars: { autoplay: autoplay}}}\r\n            />}\r\n            {!polling.loading && polling.data.mixtape.songs.length === 0 &&\r\n            <div className=\"video\">Add songs to play your mixtape!</div>}\r\n            <div className=\"likes-listens\">\r\n                {!polling.loading &&\r\n                <div>\r\n                  <IconButton component={<ThumbUpIcon style={auth.user.likedMixtapes.includes(id) ? ({color:\"var(--primary-color)\"}):({})}/>} onClick={incrementLikes} />\r\n                  <IconButton component={<ThumbDownIcon style={auth.user.dislikedMixtapes.includes(id) ? ({color:\"var(--warning-color)\"}):({})}/>} onClick={incrementDislikes} />\r\n                </div>\r\n                }\r\n                <div>\r\n                  Likes: {!polling.loading && polling.data.mixtape.likes}\r\n                </div>\r\n                <div>\r\n                  Dislikes: {!polling.loading && polling.data.mixtape.dislikes}\r\n                </div>\r\n                <div>\r\n                  Listens: {!polling.loading && polling.data.mixtape.listens}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                {userCanEdit() ? \r\n                  (\r\n                    <div>\r\n                      Genres: <Multiselect \r\n                        options={options}\r\n                        displayValue=\"value\"\r\n                        selectedValues={preSelected}\r\n                        onSelect={addGenre} \r\n                        onRemove={removeGenre}\r\n                        selectionLimit={5}\r\n                        avoidHighlightFirstOption={true}\r\n                        />\r\n                    </div>\r\n                  ):\r\n                  (\r\n                    <div>\r\n                      Genres: {!polling.loading && <span>{polling.data.mixtape.genres.join(\", \")}</span>}\r\n                    </div>\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n        </div>\r\n        {/* COMMENT STUFF */}\r\n        <h3 style={{paddingLeft: \"4vw\", paddingTop: \"4vh\"}}>Comments:</h3>\r\n        <div className=\"comments\">\r\n          <div className=\"comments-header\">\r\n            <h4>Leave a Comment: </h4>\r\n            <Form onSubmit={submitComment} className=\"comment-box\">\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={commentText}\r\n                placeholder={\"Write your comment here...\"}\r\n                style={{resize: \"none\", height:\"10vh\"}}\r\n                onChange={event => setCommentText(event.target.value)}\r\n                maxLength={250}\r\n              />\r\n              <Button type=\"submit\" className=\"mm-btn\" style={{marginTop: \"2vh\"}}>Submit Comment</Button>\r\n            </Form>\r\n          </div>\r\n          {!polling.loading && polling.data.mixtape.comments.map((comment, index) =>\r\n            <Comment\r\n              comment={comment}\r\n              startReply={() => setReplyIndex(index)}\r\n              replying={index === replyIndex}\r\n              submitReply={(replyText) => submitReply(comment.id, replyText)}\r\n          />)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n          }","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./UserResultCardStyle.css\";\r\n\r\nconst UserResultCard = (props) => {\r\n  return (\r\n    <Card className=\"user-result mm-card\" key={props.user._id}>\r\n      \r\n      <div className=\"user-result-image\"></div>\r\n\r\n      <div className=\"user-result-body\">\r\n        <Link to={\"/user/\" + props.user._id}>\r\n          <div className=\"user-result-title mm-link-light\"><h4>{props.user.username}</h4></div>\r\n        </Link>\r\n\r\n        <div className=\"user-result-description\">\r\n          {props.user.bio}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"user-result-stats\">\r\n      </div>\r\n    </Card>\r\n   \r\n  );\r\n};\r\n\r\nexport default UserResultCard;\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport Dropdown from \"../../components/Dropdown/Dropdown\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport IconButton from \"../../components/IconButton/IconButton\";\r\nimport MixtapeResultCard from \"../../components/MixtapeResultCard/MixtapeResultCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { userClient, queryUsers } from \"../../services/userService\";\r\nimport { mixtapesClient, queryMixtapes } from \"../../services/mixtapesService\";\r\nimport UserResultCard from \"../../components/UserResultCard/UserResultCard\";\r\nimport { useAuth } from \"../../utils/use-auth\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nimport \"./SearchResultsStyle.css\";\r\n\r\nconst filterTypes = {\r\n  Mixtapes: \"Mixtapes\",\r\n  Users: \"Users\"\r\n}\r\n\r\nconst items = [\r\n  filterTypes.Mixtapes,\r\n  filterTypes.Users\r\n];\r\n\r\nconst limit = 10;\r\n\r\nconst SearchResults = (props) => {\r\n  // Hook into the auth state\r\n  const auth = useAuth();\r\n\r\n  const history = useHistory();\r\n\r\n  // Hook into the params\r\n  const {criteria, filter, skip} = useParams();\r\n\r\n  // Objects to catch search results\r\n  let userObj = {loading: null, error: null, data: null, refetch: null};\r\n  let mixtapeObj = {loading: null, error: null, data: null, refetch: null};\r\n\r\n  // Query on page load the the params in the url\r\n  userObj = useQuery(queryUsers, {client: userClient, variables: {searchTerm: criteria, skip: (skip ? parseInt(skip) : 0)*limit, limit: limit}});\r\n  mixtapeObj = useQuery(queryMixtapes, {client: mixtapesClient, variables: {searchTerm: criteria, userId: auth.user._id, skip: (skip ? parseInt(skip) : 0)*limit, limit: limit}});\r\n  \r\n  const refreshResults = () => {\r\n    if(filter === filterTypes.Users){\r\n      userObj.refetch({searchTerm: criteria, skip: (skip ? parseInt(skip) : 0)*limit, limit: limit});\r\n    } else {\r\n      mixtapeObj.refetch({searchTerm: criteria, userId: auth.user._id, skip: (skip ? parseInt(skip) : 0)*limit, limit: limit});\r\n    }\r\n  }\r\n\r\n  const handleFilter = (selection) => {\r\n    // On filter change, always return to page 0\r\n    history.push(\"/SearchResults/\" + criteria + \"/\" + selection + \"/0\");\r\n  }\r\n\r\n  const getItems = () => {\r\n    if(filter === filterTypes.Users){\r\n      return userObj.data.queryUsers.map(user => ({data: user, isMixtape: false}));\r\n    } else {\r\n      return mixtapeObj.data.queryMixtapes.map(mixtape => ({data: mixtape, isMixtape: true}));\r\n    }\r\n  }\r\n  \r\n  const navigatePage = (increment) => {\r\n    let newSkip = (skip ? parseInt(skip) : 0) + increment;\r\n    if(newSkip < 0){\r\n      newSkip = 0;\r\n    }\r\n\r\n    history.push(\"/SearchResults/\" + criteria + \"/\" + filter + \"/\" + newSkip);\r\n  }\r\n\r\n  return (\r\n    <div className=\"mm-container scroll-screen\">\r\n      <Navbar currentPage={null} />\r\n      <h1 className=\"page-title\">Search Results\r\n      <div>\r\n      <Dropdown\r\n        title=\"MyDropdown\"\r\n        items={items}\r\n        selectionCallback={handleFilter}\r\n        defaultIndex={filter === filterTypes.Users ? 1 : 0}\r\n        key={filter}\r\n      />\r\n      <IconButton\r\n        component={<RefreshIcon />}\r\n        callback={refreshResults}\r\n      ></IconButton>\r\n      </div>\r\n      </h1>\r\n      <div className=\"search-display\">Searching for: {criteria}</div>\r\n      <div id=\"mixtape-list\">\r\n        {(userObj.loading || mixtapeObj.loading) && (\r\n          <div className=\"loading\">\r\n            <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        )}\r\n        {!mixtapeObj.loading && !userObj.loading && getItems().map((item, index) => {\r\n            if(item.isMixtape){\r\n              return (<MixtapeResultCard mixtape={item.data} index={index} />);\r\n            } else {\r\n              return (<UserResultCard user={item.data} key={item.data._id}/>);\r\n            }})}\r\n      </div>\r\n      <div className=\"page-navigator\">\r\n        <IconButton component={<ArrowBackIcon/>} disabled={skip ? parseInt(skip) === 0 : true} onClick={() => navigatePage(-1)}></IconButton>\r\n        <div>{skip ? skip : \"0\"}</div>\r\n        <IconButton component={<ArrowForwardIcon/>} disabled={userObj.loading || mixtapeObj.loading || getItems().length < 10} onClick={() => navigatePage(1)}></IconButton>\r\n      </div>\r\n    </div>\r\n    // <div>\r\n    //   <div className=\"page-container\">\r\n    //     <Navbar currentPage={NavbarLinks} />\r\n    //     <Card className=\"page-content\">\r\n    //       <Card.Header className=\"content-header\">\r\n    //         <div><h1>Search Results</h1>\r\n    //           Searching for: {criteria}</div>\r\n    //         <div>\r\n    //           <Dropdown\r\n    //             title=\"MyDropdown\"\r\n    //             items={items}\r\n    //             selectionCallback={handleFilter}\r\n    //             defaultIndex={0}\r\n    //           />\r\n    //           <IconButton\r\n    //             component={<RefreshIcon />}\r\n    //             callback={refreshResults}\r\n    //           ></IconButton>\r\n    //         </div>\r\n    //       </Card.Header>\r\n    //       <Card.Body className=\"scroll-content\">\r\n    //         {!mixtapeObj.loading && !userObj.loading && getItems().map(item => {\r\n    //         if(item.isMixtape){\r\n    //           return (<MixtapeResultCard mixtape={item.data} key={item.data._id} />);\r\n    //         } else {\r\n    //           return (<UserResultCard user={item.data} key={item.data._id}/>);\r\n    //         }})}\r\n    //       </Card.Body>\r\n    //       <Card.Footer className=\"card-footer\">\r\n    //         <IconButton component={<ArrowBackIcon/>} disabled={skip ? parseInt(skip) === 0 : true} onClick={() => navigatePage(-1)}></IconButton>\r\n    //         <div>{skip ? skip : \"0\"}</div>\r\n    //         <IconButton component={<ArrowForwardIcon/>} disabled={userObj.loading || mixtapeObj.loading || getItems().length < 10} onClick={() => navigatePage(1)}></IconButton>\r\n    //       </Card.Footer>\r\n    //     </Card>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport MixtapeResultCard from \"../../components/MixtapeResultCard/MixtapeResultCard\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { useToast } from \"../../utils/use-toast\";\r\n\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport { userClient, \r\n          getUser, \r\n          sendMMRequest as sendMMRequestMut,\r\n          follow as followMut,\r\n          incFollowersCount as incFollowersCountMut,\r\n          unfollow as unfollowMut,\r\n          decFollowersCount as decFollowersCountMut} from \"../../services/userService\";\r\nimport { mixtapesClient, getUserPageMixtapes } from \"../../services/mixtapesService\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../../utils/use-auth\";\r\n\r\nimport \"./UserPageStyle.css\";\r\n\r\nexport default function UserPage(){\r\n    \r\n    const {userId} = useParams();\r\n\r\n    const auth = useAuth();\r\n  \r\n    let {loading, data} = useQuery(getUser, {variables: {id: userId}, client: userClient});\r\n    let mixtapeObj = {loading: null, error: null, data: null};\r\n    \r\n    mixtapeObj = useQuery(getUserPageMixtapes, {client: mixtapesClient, variables: {userId: auth.user._id, otherUserId: userId}});\r\n    \r\n    // Hook into notifications\r\n    const toaster = useToast();\r\n  \r\n    const [sendMashmateRequestMutation] = useMutation(sendMMRequestMut, {client: userClient, onCompleted: (data) => {\r\n      auth.getUser();\r\n    }});\r\n    const [followUserMutation]= useMutation(followMut, {client: userClient, onCompleted:() => auth.getUser()});\r\n    const [incrementUserFollowCountMutation]= useMutation(incFollowersCountMut, {client: userClient});\r\n    const [unfollowUserMutation]= useMutation(unfollowMut, {client: userClient, onCompleted:() => auth.getUser()});\r\n    const [decrementUserFollowCountMutation]= useMutation(decFollowersCountMut, {client: userClient});\r\n  \r\n    const SendMashmateRequest = () => {\r\n      const mashmateRequest = {\r\n        senderId: auth.user._id,\r\n        username: auth.user.username,\r\n        seen: false\r\n      };\r\n  \r\n      sendMashmateRequestMutation({variables: {\r\n        id: data.user._id, \r\n        newMashmateRequest: mashmateRequest\r\n      }});\r\n  \r\n      // Notify user\r\n      toaster.notify(\"Request Sent\", \"You sent a mashmate request to \" + data.user.username + \".\");\r\n    }\r\n  \r\n    const followUserFunct = () => {\r\n      if (auth.user._id === data.user._id){toaster.notify(\"You cannot follow yourself!\")}\r\n      else if (auth.user.following.includes(data.user._id)){toaster.notify(\"You cannot follow this user again!\")}\r\n      else{\r\n        followUserMutation({variables: {\r\n          id: auth.user._id, \r\n          idToFollow: data.user._id\r\n        }});\r\n  \r\n        incrementUserFollowCountMutation({variables: {\r\n          id: data.user._id, \r\n        }});\r\n      }\r\n    }\r\n  \r\n    const unfollowUserFunct = () => {\r\n      if (!(auth.user.following.includes(data.user._id))){toaster.notify(\"You cannot unfollow this user again!\")}\r\n      else{  \r\n        unfollowUserMutation({variables: {\r\n          id: auth.user._id, \r\n          idToUnfollow: data.user._id\r\n        }});\r\n  \r\n        decrementUserFollowCountMutation({variables: {\r\n          id: data.user._id, \r\n        }});\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"mm-container scroll-screen\">\r\n        <Navbar currentPage={null} />\r\n        <div className=\"user-container\">\r\n          <div className=\"username\">{!loading && data.user.username}</div>\r\n          {!loading && auth.user._id !== data.user._id &&\r\n              <Button\r\n              className=\"mm-btn\"\r\n              style={{marginTop: \"2vh\", marginLeft: \"6vw\"}}\r\n              onClick={SendMashmateRequest}\r\n              disabled={loading || data.user.mashmates.reduce((acc, x) => (auth.user._id === x.id) || acc, false)\r\n                      || data.user.receivedMashmateRequests.reduce((acc, x) => (auth.user._id === x.senderId) || acc, false)}>\r\n                  {data.user.receivedMashmateRequests.reduce((acc, x) => (auth.user._id === x.senderId) || acc, false) && \"Mashmate Request Sent\"}\r\n                  {data.user.mashmates.reduce((acc, x) => (auth.user._id === x.id) || acc, false) && \"Already mashmates\"}\r\n                  {!data.user.receivedMashmateRequests.reduce((acc, x) => (auth.user._id === x.senderId) || acc, false) && !data.user.mashmates.reduce((acc, x) => (auth.user._id === x.id) || acc, false) && \"Send Mashmate Request\"}\r\n              </Button>\r\n          }\r\n          <h4 className=\"followers\">\r\n              {!loading && data.user.numFollowers} Follower{!loading && data.user.numFollowers !== 1 ? \"s\" : \"\"}\r\n              {!auth.user.following.includes(userId) ? \r\n                  (<Button className=\"mm-btn\" style={{marginLeft: \"10vw\"}} onClick={followUserFunct}>Follow</Button>) \r\n                  : \r\n                  (<Button className=\"mm-btn\" style={{marginLeft: \"10vw\"}} onClick={unfollowUserFunct}>Unfollow</Button>)\r\n              }\r\n          </h4>\r\n          {/* BIO STUFF */}\r\n          <h3 style={{paddingLeft: \"4vw\", paddingTop: \"4vh\"}}>Bio:</h3>\r\n          <div className=\"user-bio-container\">{!loading && data.user.bio}</div>\r\n          {/* MIXTAPES STUFF */}\r\n          <div className=\"users-mixtapes-container\">\r\n              <h4 style={{paddingLeft: \"2vw\", paddingBottom: \"2vw\"}}>{!loading && data.user.username}'s Mixtapes</h4>\r\n              {!mixtapeObj.loading && mixtapeObj.data.getUserPageMixtapes.reduce((acc, x) => [x, ...acc], []).map((mixtape, index) => (\r\n                  <MixtapeResultCard mixtape={mixtape} index={index} key={mixtape._id} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst { Redirect } = require(\"react-router-dom\");\r\nconst { useAuth } = require(\"../../utils/use-auth\")\r\n\r\nexport default function PrivateRoute({children, ...rest}){\r\n    const auth = useAuth();\r\n\r\n    // If auth hasn't been initialized (page refresh), check if there is a user before doing anything else\r\n    // if(!auth.initialized){\r\n    //     auth.getUser();\r\n    // }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({location}) => \r\n                auth.user ? (\r\n                    children\r\n                ) : auth.loading ? <></> : (\r\n                    <Redirect to={{\r\n                        pathname: \"/\",\r\n                        state: { from: location }\r\n                      }}/>\r\n                )\r\n            }\r\n        />\r\n    )\r\n}","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./SignInStyle.css\"\r\n\r\nexport default function Splash(props){\r\n    const history = useHistory();\r\n\r\n    return(\r\n    <div className=\"mm-container single-screen splash-screen\">\r\n        <div className=\"logo-container\">\r\n            <img src={require(\"../../images/headphones w rainbow w text.svg\")} id=\"logo\" alt=\"logo\"/>\r\n        </div>\r\n        <div className=\"splash-btn-container\">\r\n            <div className=\"splash-btn\" onClick={() => history.push(\"/login\")}>Get Mashing</div>\r\n        </div>\r\n    </div>)\r\n}","import React from \"react\";\r\nimport { Form, Button, Card } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../../../utils/use-auth\";\r\n\r\nexport default function LoginForm(props){\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n\r\n  let [username, setUsername] = React.useState(\"\");\r\n  let [password, setPassword] = React.useState(\"\");\r\n  const [invalidLoginCreds, setInvalidLoginCreds] = React.useState(false);\r\n\r\n  const tryLogin = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Don't bother checking if either field is empty\r\n    if(username !== \"\" && password !== \"\"){\r\n      auth.login(username, password).then(res => {\r\n        if(res.error){;\r\n          setInvalidLoginCreds(true);\r\n        } else {\r\n          if (res.active){\r\n            history.push(\"/HottestMixtapes\");\r\n          }\r\n          else {\r\n            props.reactivateAccount();\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      setInvalidLoginCreds(true);\r\n    }\r\n  }\r\n  \r\n  return (<>\r\n    <Card.Header>\r\n      <h2>Log In</h2>\r\n      <div className=\"mm-link-blue\" onClick={() => props.setSignup(true)}>No Account? Sign Up!</div>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form onSubmit={tryLogin}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Username or Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter username or email\"\r\n            value={username}\r\n            onChange={(event) => setUsername(event.target.value)}\r\n            isInvalid={invalidLoginCreds}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">Invalid username or password</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label style={{display: \"flex\", justifyContent: \"space-between\"}}>Password{\" \"}<span className=\"mm-link-blue\" onClick={() => props.setForgotPassword(true)}>Forgot Password</span></Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" onChange={(event) => setPassword(event.target.value)} />\r\n        </Form.Group>\r\n        {/* Hidden button to handle form submission w/ enter key */}\r\n        <Button type=\"submit\" variant=\"primary\" className=\"mm-btn\" hidden></Button>\r\n      </Form>\r\n    </Card.Body>\r\n    <Card.Footer>\r\n      <Button variant=\"primary\" className=\"mm-btn\" onClick={tryLogin}>\r\n        Get Mashing!\r\n      </Button>\r\n    </Card.Footer>\r\n    \r\n  </>)   \r\n}","import React from \"react\";\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport { Button, Form, Col, Card } from \"react-bootstrap\";\r\n\r\nimport { useAuth } from \"../../../utils/use-auth\";\r\nimport { useToast } from \"../../../utils/use-toast\";\r\nimport IconButton from \"../../../components/IconButton/IconButton\";\r\n\r\nconst SignUpForm = (props) => {\r\n    // Hook into the auth state\r\n    const auth = useAuth();\r\n\r\n    // Hook into notification state\r\n    const toaster = useToast();\r\n\r\n    // Hook into state\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [username, setUsername] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n\r\n    const [passwordVisible, setPasswordVisible] = React.useState(false);\r\n\r\n    const [validated, setValidated] = React.useState(false);\r\n    const [isInvalid, setIsInvalid] = React.useState({email: false, username: false, password: false});\r\n\r\n    const emailRegex = /^.+@.+\\..+/;\r\n\r\n    const signUp = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Start validating after initial submit\r\n        setValidated(true);\r\n        if(email === \"\" || !emailRegex.test(email) || username === \"\" || password.length < 6){\r\n            // Empty fields are invalid\r\n            setIsInvalid({email: email === \"\" || !emailRegex.test(email), username: username === \"\", password: password.length < 6});\r\n        } else {\r\n            // If no fields are empty, try to create a user\r\n            auth.signup(username, email, password).then(res => {\r\n                if(!res.error){\r\n                    // We may not have created account\r\n                    if(!res.userCreated){\r\n                        setIsInvalid({email: res.emailExists, username: res.usernameExists, password: false});\r\n                    } else {\r\n                        // We created a user\r\n                        props.exitSignUp();\r\n\r\n                        // And notify user\r\n                        toaster.alert(\"Account Created\", \"Congratulations \" + username + \" - Your account was successfully created! Please log in to begin your Mix n Mash adventure!\", \"success\");\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <Card.Header>\r\n            <h2>Sign Up</h2>\r\n        </Card.Header>\r\n        <Form>\r\n            <Card.Body>\r\n                <Form.Group noValidate controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        required\r\n                        placeholder=\"Enter email\"\r\n                        onChange={event => {setEmail(event.target.value); isInvalid.email = false; setIsInvalid(isInvalid)}}\r\n                        isInvalid={validated && isInvalid.email}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">{email === \"\" ? \"You must enter a valid email.\" : \"That email already has an account.\"}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group noValidate>\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        required\r\n                        placeholder=\"Choose a username\"\r\n                        onChange={event => {setUsername(event.target.value); isInvalid.username = false; setIsInvalid(isInvalid)}}\r\n                        isInvalid={validated && isInvalid.username}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">{username === \"\" ? \"You must enter a username.\" : \"Username already exists\"}</Form.Control.Feedback>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Row>\r\n                        <Col>\r\n                            <Form.Control\r\n                                type={passwordVisible ? \"text\" : \"password\"}\r\n                                required\r\n                                placeholder=\"Password\"\r\n                                onChange={(event) => {setPassword(event.target.value); isInvalid.password = false; setIsInvalid(isInvalid)}}\r\n                                isInvalid={validated && isInvalid.password}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">You must enter a password with more than 6 characters.</Form.Control.Feedback>\r\n                        </Col>\r\n                        <Col md=\"auto\">\r\n                            <IconButton\r\n                                component={passwordVisible ? <VisibilityIcon/> : <VisibilityOffIcon/>}\r\n                                onMouseDown={() => setPasswordVisible(true)}\r\n                                onMouseUp={() => setPasswordVisible(false)}\r\n                            ></IconButton>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form.Group>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <Button variant=\"primary\" type=\"submit\" className=\"mm-btn\" onClick={signUp}>Create Account</Button>        \r\n                <Button variant=\"primary\" className=\"mm-btn-warning\" onClick={props.exitSignUp}> Cancel</Button>\r\n            </Card.Footer>\r\n        </Form>\r\n    </>)\r\n}\r\n\r\nexport default SignUpForm;","import React from \"react\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport { Col, Button, Form, Card } from \"react-bootstrap\";\r\n\r\nimport { useAuth } from \"../../../utils/use-auth\";\r\nimport IconButton from \"../../../components/IconButton/IconButton\";\r\nimport { useToast } from \"../../../utils/use-toast\";\r\n\r\nconst ForgotPasswordForm = (props) => {\r\n    // Hook into auth\r\n    const auth = useAuth();\r\n    const toaster = useToast();\r\n\r\n    const [receivedEmailCode, setReceivedEmailCode] = React.useState(false);\r\n    const [newPassword, setNewPassword] = React.useState(\"\");\r\n    const [tempEmail, setTempEmail] = React.useState(\"\");\r\n    const [tempCode, setTempCode] = React.useState(\"\");\r\n    const [passwordVisible, setPasswordVisible] = React.useState(false);\r\n    const [isInvalid, setIsInvalid] = React.useState({code: false, password: false});\r\n    const [validated, setValidated] = React.useState(false);\r\n\r\n    const sendEmail = () => {\r\n        auth.forgotPassword(tempEmail);\r\n        setReceivedEmailCode(true);\r\n        toaster.alert(\"Recovery email sent\", \"If there is a user account associated with the email address you entered, you will receive an email containing a code to reset your password.\", \"success\");\r\n    }\r\n\r\n    const handleResetPassword = () => {\r\n        // After one submission, start validating\r\n        setValidated(true);\r\n\r\n        if(newPassword.length >= 6){\r\n            auth.resetPassword(tempEmail, tempCode, newPassword).then((res)=>{\r\n                if(res.error){\r\n                    // Error, so tell user the code is invalid or expired\r\n                    setIsInvalid({code: true, password: false});\r\n                } else {\r\n                    props.setForgotPassword(false);\r\n                    setReceivedEmailCode(false); \r\n                    setTempEmail(\"\"); \r\n                    setTempCode(\"\"); \r\n                    setNewPassword(\"\");\r\n                }\r\n            });\r\n        } else {\r\n            // Password is too short - invalid\r\n            setIsInvalid({code: false, password: true});\r\n        }\r\n    }\r\n\r\n    const cancelForgotPassword = () => {\r\n        props.setForgotPassword(false);\r\n        setReceivedEmailCode(false);\r\n        setTempEmail(\"\");\r\n        setTempCode(\"\");\r\n        setNewPassword(\"\");\r\n    }\r\n\r\n    if(!receivedEmailCode){\r\n        return (\r\n        <>\r\n            <Card.Header>\r\n                <h2>Forgot Password</h2>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <div>Please enter your email:</div>\r\n                <Form.Group>\r\n                <Form.Control type=\"email\" placeholder=\"Enter the email for your account...\" onChange={(event)=> setTempEmail(event.target.value)}/>\r\n                </Form.Group>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <Button className=\"mm-btn\" onClick={sendEmail}>Send Email</Button>\r\n                <Button variant=\"primary\" className=\"mm-btn-warning\" onClick={cancelForgotPassword}>Back to Log-In</Button>\r\n            </Card.Footer>\r\n        </>\r\n          )\r\n    } else {\r\n        return (<>\r\n            <Card.Header>\r\n                <h2>Forgot Password</h2>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Form.Group>\r\n                    <Form.Label>Please enter the temporary code sent to your email:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Code\"\r\n                        onChange={(event) => {setTempCode(event.target.value); isInvalid.code = false; setIsInvalid(isInvalid)}}\r\n                        isInvalid={validated && isInvalid.code}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">Code is invalid or expired.</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Row>\r\n                        <Col>\r\n                            <Form.Control\r\n                                type={passwordVisible ? \"text\" : \"password\"}\r\n                                required\r\n                                placeholder=\"Password\"\r\n                                onChange={(event) => {setNewPassword(event.target.value); isInvalid.password = false; setIsInvalid(isInvalid)}}\r\n                                isInvalid={validated && isInvalid.password}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">You must enter a password with more than 6 characters.</Form.Control.Feedback>\r\n                        </Col>\r\n                        <Col md=\"auto\">\r\n                            <IconButton\r\n                                component={passwordVisible ? <VisibilityIcon/> : <VisibilityOffIcon/>}\r\n                                onMouseDown={() => setPasswordVisible(true)}\r\n                                onMouseUp={() => setPasswordVisible(false)}\r\n                            ></IconButton>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form.Group>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n                <Button className=\"mm-btn\" onClick={handleResetPassword}>Update Password</Button>\r\n                <Button variant=\"primary\" className=\"mm-btn-warning\" onClick={cancelForgotPassword}>Back to Log-In</Button>\r\n            </Card.Footer>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default ForgotPasswordForm;","import React from \"react\";\r\nimport { Card, Button, Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../../../utils/use-auth\";\r\nimport {reactivateAccount as reactivateAccountMut, userClient} from \"../../../services/userService\";\r\nimport {mixtapesClient, getAllUserMixtapes, updateOwnerActive as updateOwnerActiveMut} from \"../../../services/mixtapesService\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\n\r\nexport default function ReactivateAccount(props){\r\n    const history = useHistory();\r\n\r\n    // Hook into the auth\r\n    const auth = useAuth();\r\n\r\n    const [reactivateAccountMutation] = useMutation(reactivateAccountMut, {client: userClient, onCompleted: ()=>{auth.getUser(); history.push(\"/HottestMixtapes\")}});\r\n\r\n    const [updateOwnerActiveMutation] = useMutation(updateOwnerActiveMut, {client: mixtapesClient});\r\n\r\n    let {loading, data} = useQuery(getAllUserMixtapes, {client: mixtapesClient, variables:{userId: auth.user._id}});\r\n\r\n    const updateMixtapesOwnerActive = () => {\r\n      if(!loading){\r\n          data.getAllUserMixtapes.filter((mixtape) => mixtape.ownerId === auth.user._id)\r\n          .forEach((mixtape)=>{updateOwnerActiveMutation({variables: {id: mixtape._id, ownerActive: true}})});\r\n      }\r\n    }\r\n    \r\n    return (<>\r\n        <Card.Header>\r\n            <h2>Reactivate Account</h2>\r\n        </Card.Header>\r\n        <Card.Body>\r\n            <Form className=\"space-above\">\r\n                <h5>Your account is currently deactivated. Would you like to reactivate your account?</h5>\r\n                <div>(You can deactivate your account again at any time)</div>\r\n            </Form>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n            <Button className=\"mm-btn-warning\" onClick={() => {auth.logout().then(success => {if(success !== false){props.exitReactivate();}})}}>Cancel</Button>\r\n            <Button className=\"mm-btn\" onClick={() => {updateMixtapesOwnerActive(); reactivateAccountMutation({variables: {id: auth.user._id}});}}>Reactivate Account</Button>\r\n        </Card.Footer>\r\n    </>);\r\n}","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport LoginForm from \"./Components/LoginForm\"\r\nimport SignUpForm from \"./Components/SignUpForm\";\r\nimport ForgotPasswordForm from \"./Components/ForgotPasswordForm\";\r\nimport ReactivateAccountForm from \"./Components/ReactivateAccountForm\";\r\n\r\nimport \"./SignInStyle.css\"\r\n\r\nexport default function SignIn(props){\r\n  const [forgotPassword, setForgotPassword] = React.useState(false);\r\n  const [signup, setSignup] = React.useState(false);\r\n  const [reactivateAccount, setReactivateAccount] = React.useState(false);\r\n\r\n  return(\r\n  <div className=\"mm-container single-screen splash-screen\">\r\n    <div className=\"logo-container slide-left\">\r\n        <img src={require(\"../../images/headphones w rainbow w text.svg\")} id=\"logo\" alt=\"logo\"/>\r\n    </div>\r\n    <div className=\"login-container\">\r\n      <Card className=\"login-card fade-in\">\r\n        {!forgotPassword && !signup && !reactivateAccount && <LoginForm setForgotPassword={setForgotPassword} setSignup={setSignup} reactivateAccount={()=>setReactivateAccount(true)}/>}\r\n        {forgotPassword && <ForgotPasswordForm setForgotPassword={setForgotPassword} />}\r\n        {signup && <SignUpForm exitSignUp={() => setSignup(false)}/>}\r\n        {reactivateAccount && <ReactivateAccountForm exitReactivate={() => setReactivateAccount(false)}/>}\r\n      </Card>\r\n    </div>\r\n  </div>)\r\n}","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\n\r\nimport HottestMixtapes from \"./pages/HottestMixtapes/HottestMixtapes\";\r\nimport MyMixtapes from \"./pages/MyMixtapes/MyMixtapes\";\r\nimport Account from \"./pages/Account/Account\";\r\nimport MixtapePage from \"./pages/MixtapePage/MixtapePage\";\r\nimport SearchResults from \"./pages/SearchResults/SearchResults\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport UserPage from \"./pages/UserPage/UserPage\";\r\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\r\nimport { ProvideAuth } from \"./utils/use-auth\";\r\nimport { ProvideToast } from \"./utils/use-toast\";\r\nimport Splash from \"./pages/SignIn/Splash.js\";\r\nimport SignIn from \"./pages/SignIn/SignIn.js\";\r\nimport { ProvidePolling } from \"./utils/use-polling\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"http://localhost:3000\",\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default function App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <ProvideAuth>\r\n        <BrowserRouter>\r\n          <ProvidePolling>\r\n            <ProvideToast>\r\n              <Route path=\"/\" exact component={Splash} />\r\n              <Route path=\"/login\" component={SignIn} />\r\n              <PrivateRoute path=\"/HottestMixtapes/:criteria?/:skip?/:filter?\"><HottestMixtapes/></PrivateRoute>\r\n              <PrivateRoute exact path=\"/MyMixtapes\"><MyMixtapes/></PrivateRoute>\r\n              <PrivateRoute exact path=\"/Mixtape/:mixtapeId\"><MixtapePage/></PrivateRoute>\r\n              <PrivateRoute path=\"/Account\"><Account/></PrivateRoute>\r\n              <PrivateRoute path=\"/SearchResults/:criteria/:filter/:skip?\"><SearchResults/></PrivateRoute>\r\n              <PrivateRoute exact path=\"/User/:userId\"><UserPage/></PrivateRoute>\r\n            </ProvideToast>\r\n          </ProvidePolling>\r\n        </BrowserRouter>\r\n      </ProvideAuth>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./global.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}